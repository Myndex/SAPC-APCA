<!DOCTYPE html>
<html lang="en-US">
<head>
<meta http-equiv="refresh" content="0;url=https://www.myndex.com/APCA/"/>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-121680439-6">
</script>
<script async>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-121680439-6');
</script> 

<!--ALL PAGES ON THIS SITE ARE COPYRIGHT Â© 1997-2022 by ANDREW SOMERS, ALL RIGHTS RESERVED
The content on this page is PROPRIETARY AND NOT LICENSED FOR FURTHER USE. -->

<meta charset="utf-8" />

<title>APCA Basic</title>

<meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="canonical" href="https://www.myndex.com/APCA/" />

<META NAME="Description" CONTENT="The APCA Accessible Perceptual Contrast Algorithim SIMPLE VERSION.">
<META NAME="Keywords" CONTENT="Myndex, Research and Development, RnD, R&amp;D, Engineer, Engineering, Systems Engineer, Industrial Design, Solidworks, FEA, CADCAM, drafting, 3D modeling, prototyping, software development, database development, IT">

<meta property="fb:app_id" content="227594707878157" />

<meta property="og:title" content="Myndex&trade; Perception Research" />
<meta property="og:description" content="The APCA Accessible Perceptual Contrast Algorithim BASIC VERSION." />

<meta property="og:type" content="website" />
<meta property="og:url" content="https://www.myndex.com/APCA/" />
<meta property="og:site_name" content="Myndex&trade; APCA Tool" />

<meta property="og:image" content="images/APCAlogo.png"/>
<meta property="og:image:alt" content="APCA The Revolution Will Be Readable"/>
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="825" />
<meta property="og:image:height" content="442" />

<link rel="apple-touch-icon" sizes="60x60" href="/images/favicons2020/apple-touch-icon-60x60.png?ver=fav20">
<link rel="apple-touch-icon" sizes="76x76" href="/images/favicons2020/apple-touch-icon-76x76.png?ver=fav20">
<link rel="apple-touch-icon" sizes="120x120" href="/images/favicons2020/apple-touch-icon-120x120.png?ver=fav20">
<link rel="apple-touch-icon" sizes="152x152" href="/images/favicons2020/apple-touch-icon-152x152.png?ver=fav20">
<link rel="apple-touch-icon" sizes="180x180" href="/images/favicons2020/apple-touch-icon-180x180.png?ver=fav20">
<link rel="icon" type="image/png" sizes="32x32" href="/images/favicons2020/favicon-32x32.png?ver=fav20">
<link rel="icon" type="image/png" sizes="16x16" href="/images/favicons2020/favicon-16x16.png?ver=fav20">
<link rel="manifest" href="/images/favicons2020/site.webmanifest?ver=fav20">
<link rel="mask-icon" href="/images/favicons2020/safari-pinned-tab.svg?ver=fav20" color="#3300aa">
<link rel="shortcut icon" href="/images/favicons2020/favicon.ico?ver=fav20">
<meta name="msapplication-TileColor" content="#3300aa">
<meta name="msapplication-config" content="/images/favicons2020/browserconfig.xml?ver=fav20">
<meta name="theme-color" content="#3300aa">



<link rel="preconnect" href="https://fonts.googleapis.com"> 
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> 
  <link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Barlow:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">

<link rel="stylesheet" href="CSS/style.0.1.2-g.css">  

<style>
:root {
  --textColor: #123;
  --textColorFlip: #abc;
  --textColorMid: #449;
  --textColorMono: #404;
  --bgColor: #abc;
  --bgColorFlip: #123;
  --bgColorMid: #494;
  --bgColorMono: #efe;
  
  --tickLabel: #30a;
  
  --slideLabelBG: #e50;
  --slideLabelText: #222;
  
  --insideOutLo: #000;
  --insideOutHi: #bcd;
  --insideOutMidLo: #000;
  --insideOutMidHi: #dcb;
  --insideOutLoBG: #642;
  --insideOutHiBG: #fff;
  --insideOutMidLoBG: #248;
  --insideOutMidHiBG: #fff;

  --gradLo: #123;
  --gradHi: #abc;
}

body { background-color:#abc;}

.safari h3 { font-weight: 500; }
 
  /* SVG GAMMA TARGETS */  
 
.gammaBox,.gammaBoxB {
  display: inline-block;
  Position: Relative;
  Margin: 10px auto;
  Width: 270px;
  Height: 216px;
  border: 48px solid #378837;
  border-radius: 24px;
  }

 fieldset {outline: none; border: none;}


#gammaBoxDith9B {/* target #9B manual calc 2.8 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#9b9b9b;
  }
#gammaBoxDith96 {/* target #96 manual calc 2.6 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#969696;
  }
#gammaBoxDith93 {/* target #93 manual calc 2.5 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#939393;
  }
#gammaBoxDith8F {/* target #8f manual calc 2.4 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#8f8f8f;
  }


#gammaBoxDith88 {/* target #88 manual calc 2.2 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#888888;
  }
#gammaBoxDith7B {/* target #7b manual calc 1.9 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="3" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23ffffff" /><rect x="1" y="2" width="1" height="2" fill="%23000000" /><rect x="2" y="0" width="1" height="2" fill="%23000000" /><rect x="2" y="2" width="1" height="1" fill="%23ffffff" /><rect x="2" y="3" width="1" height="1" fill="%23000000" /><rect x="3" y="0" width="1" height="3" fill="%23000000" /><rect x="3" y="3" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/4px 4px repeat;
  border-color:#7b7b7b;
  }




#gammaBoxDithC7 {/* target #c7 manual calc 2.8 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/2px 2px  repeat;
  border-color:#c7c7c7;
  }
#gammaBoxDithC3 {/* target #c3 manual calc 2.6 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/2px 2px  repeat;
  border-color:#c3c3c3;
  }
#gammaBoxDithC1 {/* target #c1 manual calc 2.5 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/2px 2px  repeat;
  border-color:#c1c1c1;
  }
#gammaBoxDithBF {/* target #bf manual calc 2.4 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>')0 0/2px 2px  repeat;
  border-color:#bfbfbf;
  }

#gammaBoxDithBA {/* target #ba manual calc 2.2 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/2px 2px  repeat;
  border-color:#bababa;
  }
#gammaBoxDithB1 {/* target #b1 manual calc 1.9 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 2 2" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="0" y="1" width="1" height="1" fill="%23ffffff" /></svg>') 0 0/2px 2px  repeat;
  border-color:#b1b1b1;
  }



  #gammaBoxDithE6 {/* target #e6 manual calc 2.8 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px  repeat;
  border-color:#e6e6e6;
  }
  
  #gammaBoxDithE4 {/* target #e4 manual calc 2.6 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px  repeat;
  border-color:#e4e4e4;
  }
  
  #gammaBoxDithE3 {/* target #e3 manual calc 2.5 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px  repeat;
  border-color:#e3e3e3;
  }
#gammaBoxDithE2 {/* target #e2 manual calc 2.4 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px repeat;
  border-color:#e2e2e2;
  }
  
  #gammaBoxDithE0 {/* target #e2 manual calc 2.2 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px  repeat;
  border-color:#e0e0e0;
  }
  #gammaBoxDithDB {/* target #db manual calc 1.9 jan 27 2022 */
  background: url('data:image/svg+xml;utf8,<svg preserveAspectRatio="none"  viewBox="0 0 4 4" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="1" height="1" fill="%23000000" /><rect x="0" y="1" width="1" height="3" fill="%23ffffff" /><rect x="1" y="0" width="1" height="1" fill="%23ffffff" /><rect x="1" y="1" width="1" height="1" fill="%23000000" /><rect x="1" y="2" width="1" height="2" fill="%23ffffff" /><rect x="2" y="0" width="1" height="2" fill="%23ffffff" /><rect x="2" y="2" width="1" height="1" fill="%23000000" /><rect x="2" y="3" width="1" height="1" fill="%23ffffff" /><rect x="3" y="0" width="1" height="3" fill="%23ffffff" /><rect x="3" y="3" width="1" height="1" fill="%23000000" /></svg>') 0 0/4px 4px  repeat;
  border-color:#dbdbdb;
  }
  
.gammaLabel,.gammaLabelM {
  display: block;
  position:relative;
  margin: -46px 0 0;
  padding: 2px 0px 6px;
  font-family: 'Barlow', sans-serif;
  font-size: 1.2em;
  text-align: center;
  color: #000;
  }
.gammaLabelM {font-size: 1em;}

  
  {
  2.5: E3
  2.5: C1
  2.5: 92 or 93
  
  
  1.9: DB
  1.9: B1
  1.9: 7B
  }
  
  
.cGr0  { color: #000;}
.cGr1  { color: #111;}
.cGr2  { color: #222;}
.cGr30 { color: #303030;}
.cGr3  { color: #333;}
.cGr4  { color: #444;}
.cGr5  { color: #555;}
.cGr6  { color: #666;}
.cGr7  { color: #777;}
.cGr8  { color: #888;}
.cGr9  { color: #999;}
.cGrA  { color: #AAA;}
.cGrB  { color: #BBB;}
.cGrC  { color: #CCC;}
.cGrD  { color: #DDD;}
.cGrE  { color: #EEE;}
.cGrF  { color: #FFF;}



   

.head { font-weight: 500; }
b { font-weight: 600; }
em { font-weight: 600; font-style: italic; }

.tb04 { tab-size: 4; }
.tb05 { tab-size: 5; }
.tb06 { tab-size: 6; }
.tb07 { tab-size: 7; }
.tb08 { tab-size: 8; }
.tb09 { tab-size: 9; }
.tb10 { tab-size: 10; }
.tb11 { tab-size: 11; }
.tb12 { tab-size: 12; }
.tb13 { tab-size: 13; }
.tb14 { tab-size: 14; }
.tb15 { tab-size: 15; }
.tb16 { tab-size: 16; }
.tb17 { tab-size: 17; }
.tb18 { tab-size: 18; }

</style>

  <!-- This Page Requires beta 0.1.2-G or greater of the following file. -->
  <script src="JS/DEV.0.1.2.G_SAPCsRGB.js"></script>

<script async>

// User Agent Detection â place first in head
// Set body tag: <body id="bodyid" onload="setBrowser()">

  let browserName = "";
function setBrowser() {
  if(navigator.vendor.match(/google/i)) {
    browserName = 'chrome/blink';
    document.getElementById("bodyid").classList.add("chrome");
  } else if(navigator.vendor.match(/apple/i)) {
    browserName = 'safari/webkit';
    document.getElementById("bodyid").classList.add("safari");
  } else if(navigator.userAgent.match(/firefox\//i)) {
    browserName = 'firefox/gecko';
    document.getElementById("bodyid").classList.add("firefox");
  } else if(navigator.userAgent.match(/edge?\//i)) {
    browserName = 'edge/edgehtml';
    document.getElementById("bodyid").classList.add("edge");
  } else if(navigator.userAgent.match(/trident\//i)) {
    browserName = 'ie/trident';
    document.getElementById("bodyid").classList.add("IErecent");
  } else if(navigator.userAgent.match(/MSIE\//i)) {
    browserName = 'ie/IE';
    document.getElementById("bodyid").classList.add("IElegacy");
  } else {
    browserName = navigator.userAgent + " by " + navigator.vendor;
    document.getElementById("bodyid").classList.add("unknownAgent");
  }
//console.log(document.getElementById("bodyid").classList);
}  


////////////////////////////////////////////////////////////////////////////////
//////////// PAGE CODE BETA 0.98g //////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//////////// PAGE MAIN FUNCTIONS ///////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// To do: work on reducing the use of globals!

// Declare the two key variables
let BG = new RGBcolor('2F4');
let TXT = new RGBcolor('42F');

function getCSScolor(sRGBstrg, type) {
    // Call to primary color pre-process
    // Returns RGBcolor OBJECT if good
    // Sets page colors
    
  let thisColor = new RGBcolor(sRGBstrg);

  if (thisColor.ok) {

    switch (type) {

    case 'BG':

      BG = thisColor;

      //  Clear Error warning colors
        inputBG.style.backgroundColor = '#DFA';
        BGpickerWrap.style.backgroundColor = '#808080';

      // Set the input element and result element values to match 
        inputBG.value = thisColor.cleaned;
        BGpicker.value = thisColor.hexNoA();
        
      // Set the CSS BG colors
        BGpicker.style.backgroundColor = cssVar('--bgColor',thisColor.hexNoA());


      break;

    case 'TXT':

      TXT = thisColor;
      
      //  Clear Error warning colors
      inputTXT.style.backgroundColor = '#DFA';
      TXTpickerWrap.style.backgroundColor = '#808080';

      // Set the input element and result element values to match       
      inputTXT.value = thisColor.cleaned;
      TXTpicker.value = thisColor.hexNoA();

      // Set the CSS text colors // Background for result: it is the patch
            
      TXTpicker.style.backgroundColor =       
      TXTpicker.style.Color = cssVar('--textColor',thisColor.hexNoA());       


      break;

    case 'MID':
    
      //MID = thisColor;
      //cssVar('--textColorMid',MID.hexNoA()); 
      //cssVar('--bgColorMid',MID.hexNoA()); 
      
      //return thisColor;  // jump out now for MID

      break;
    }


    let colorValid = '<code><span class="dib ls0 m0 pt08 fs075 lh10 fwb">'
      + thisColor.hexNoA2() + ' â¢ ' + thisColor.RGBAstr();
      
  
  // Report results to the results window to show info about the color

    document.getElementById( type + 'validText' ).innerHTML = colorValid;


    return thisColor;

  } else {  // else when the color is an invalid entry.
      
    document.getElementById( type + 'validText' ).innerHTML =
    '<code><span class="dib ls02 fs10 lh20 cR fwb"><b>INVALID COLOR</b></span></code>';
    
    switch (type) { // Set error warning colors
      case 'BG':
        inputBG.style.backgroundColor = '#F9A';
        BGpickerWrap.style.backgroundColor = '#D00';
        BG.ok = false;
      break;

      case 'TXT':
        inputTXT.style.backgroundColor = '#F9A';
        TXTpickerWrap.style.backgroundColor = '#D00';
        TXT.ok = false;
      break;
      }
    }
  }


////////////////////////////////////////////////////////////////////////////////
/////////  MYNDEX FRAMEWORK FUNCTIONS  /////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

const cssVar = ( name, value ) => {
  if(name.substr(0, 2) !== "--") {name = "--" + name; }
  if(value) { document.documentElement.style.setProperty(name, value) }
  return getComputedStyle(document.documentElement).getPropertyValue(name);
}

const byID = ( name, property, value, property2 ) => {

    let tempObj = document.getElementById(name);
    
    if(property) {
      tempObj = tempObj[property]; 
      if(property2) {tempObj = tempObj[property];}      
      if(value != null) {tempObj = value;}
    }
    return tempObj;         
}
  // Usage for byID()
  // byID('thing'); // returns DOM thing
  // byID('thing','innerHTML'); // returns thing's innerHTML
  // byID('thing','style',null,'color');    // returns thing's color
  // byID('thing','style','#777','color'); // sets thing's color to #777
  // byID('thing','style','color: #777'); // replaces thing's style string


const byQuery = ( selectors, styleProperty, value) => {

    let tempAry = document.querySelectorAll(selectors).style;

    if(value != null && styleProperty != null) {
      tempAry.forEach((elementStyle) => {
        elementStyle[property] = value;   
      })
    } else if(value != null) {
      tempAry.forEach((elementStyle) => {
        elementStyle = value;   
      })
    }

    return tempAry;         
}
  // Usage for byQuery()
  // byQuery('p.thing'); // returns array of "p.thing" elements
  // byQuery('p.thing','color','#777'); // sets all p.things color to #777
  // byQuery('p.thing',null,'color: #777'); // replaces p.thing's style string  


const byClass = ( className, property, value, property2 ) => {

  var theClasses = document.getElementsByClassName(className);
  
    if(value != null) {
      theClasses.forEach((thisClass) => { 
        if(property2) {
          thisClass[property][property2] = value;
        } else {
          thisClass[property] = value;    
        }
    })
    
    return  theClasses;     
  }
}
  // Usage for byClass()
  // byClass('thing'); // returns array of thing classes    
  // byClass('thing','innerHTML'); // set all thing classes innerHTML to empty
  // byClass('thing','innerHTML','Hollow World');
        // sets all thing classes innerHTML to "Hollow World"
  
  // byClass('thing','style','#777','color');
        // sets all thing classes color to #777
  
  // byClass('thing','style','color: #777'); 
        // Replaces all thing classes style string with 'color: #777'


////////////////////////////////////////////////////////////////////////////////
/////////  PAGE UTILITY FUNCTIONS  /////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

  function swapColors() {
    
    let BGtemp = inputBG.value;
    getCSScolor(inputTXT.value,'BG');
    getCSScolor(BGtemp, 'TXT');

    testContrast();
  }
  
  // getColorURL is the main page initializer
  
  function getColorURL() {

    let urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('BG') && urlParams.has('TXT')) {
      BG = getCSScolor(urlParams.get('BG'),'BG');
      TXT = getCSScolor(urlParams.get('TXT'), 'TXT');

      document.getElementById("URLresult").value = document.URL; 
      document.getElementById("URLresult").select();

    } else {

      BG = getCSScolor('e9e4d0','BG'); // Default BG Color 
      TXT = getCSScolor('1234b0', 'TXT'); // Default TXT Color
    } 

    //populateLabels();
    testContrast();
  }

      //getCSScolor(TXT, 'TXT');
      //getCSScolor(BG,'BG');

      //console.log('1 ' + window.location.pathname); // Returns path only
      //console.log('2 ' + window.location.href);
      //console.log('3 ' + document.URL);


  // Note the TXT param is now uppercase to be consistent with the vars
  function createColorURL (elementID,BGstring,TXTstring) {
    
    if (BGstring && TXTstring) {
      BG = new RGBcolor(BGstring);
      TXT = new RGBcolor(TXTstring);
    }
  
    if (BG.ok && TXT.ok) {  
      let newURL = document.getElementById(elementID).href =
        "https://www.myndex.com" + window.location.pathname
        + "?BG=" + BG.hex()
        + "&TXT=" + TXT.hex()
        + "&DEV=98G4g"
        //+ "&RSH=" + researchMode.toString()
        //+ "&SEL=" + researchSelect        
        + "&BUF=APCA-G";
      navigator.clipboard.writeText(newURL);
    } else {
      document.getElementById('colorWarn').style.display='block'
    }
  }
    
    // Entry Key Cleanup for better UX with auto-enter
    
  function entryKeys(colorString,type,e) {
    if (
      (
      (e.which >= 48 && e.which <= 57 && event.shiftKey == false) || // 0-9
      (e.which >= 65 && e.which <= 90) ||  // a-z
      (e.which >= 96 && e.which <= 105) // num keypad
      ) ||
      e.which === 13 || // enter
      e.which === 9 || // tab key
      e.which === 188 || // comma key
      e.which === 194 || // comma num keypad key
      //e.which === 8  || // backspace
      //e.which === 17 || // ctrl
      //e.which === 46 || // delete
      //(e.which >= 91 && e.which <= 93) ||  // OS key
      (e.which === 48 && event.shiftKey == true) // close parenthesis
    ) {
      getCSScolor(colorString,type);
      testContrast();
    }
  }

  function entryKeysNum(value,e) {
    if ( /^-?\d\d?\d?$/.test(value) && // constrain input 
      (
        (e.which >= 48 && e.which <= 57 && event.shiftKey == false) ||
        (e.which >= 96 && e.which <= 105) || // num keypad
       
        e.which === 13  || // enter
        e.which === 9 || // tab key
        e.which === 109 || // subtract
        e.which === 173 || // minus
        e.which === 189    // minus some user agents
      ) 
    ) {
      setResearchOffset(value);
    }
  }
////////////////////////////////////////////////////////////////////////////////
/////////  END HEAD FUNCTIONS  â¢â¢â¢  SEE AFTER FOOTER FOR MORE  /////////////////
////////////////////////////////////////////////////////////////////////////////
</script>
</head>


<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->



<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->



<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->
<!--  ********  ********   Begin Body ********  ********  -->



<body id="bodyid" onload="setBrowser(); getColorURL();">
<main class="wrapper">

  <a href="https://www.myndex.com/WEB/Perception" aria-label="Go Back to Percepton Experiments">
  <header class="smallHeader sticky"> &nbsp; </header></a>
<br>
<br>
  <h1 class="mastHead"  style="">APCA&nbsp;CONTRAST&nbsp;CALCULATOR</h1>
	<h3>This Legacy Page is Deprecated: <a href="https://www.myndex.com/APCA/">Please Click Here</a> for the current tool.</h3>
<div style="position: relative; Margin: 0.25em auto;">
  <div id="null01" class="contrastChart pie">

<table id="tableSamples" class='conformScore fs14'>
    <tr>  
    <th class='colorPicker' id="TXTpickerWrap" rowspan='2'><label for="TXTpicker">Click</label>
    <input type="color" id="TXTpicker"
            oninput="getCSScolor(this.value,'TXT'); inputTXT.value = this.value; testContrast();">
        </th>

    <th colspan='3'class='tableTitle'><label for="inputTXT">TEXT COLOR</label></th>

        <th class='tableContrast' colspan='2' rowspan='2' role="button" tabindex="0" onkeypress="if(event.keyCode==32||event.keyCode==13){swapColors()};" onclick="swapColors()" ><span style="font-size: 1em; letter-spacing: 0.1em;">APCA<span style="font-size: 0.6em;  letter-spacing: 0;"><br>CONTRAST<br></span><span style="font-family: 'Barlow Condensed'; font-size: 0.95em;font-weight: bold; line-height: 1.1;" id="contrastResultTable"></span><br><span class="helvetiFont" style="line-height: 1;">Click To Swap</span>
        </button></th>

    <th class='tableTitle'colspan='3'><label for="inputBG">BACKGROUND</label></th>

    <th class='colorPicker' id="BGpickerWrap"  rowspan='2' ><label for="BGpicker">Click</label>
    <input type="color" id="BGpicker"
            oninput="getCSScolor(this.value,'BG'); inputBG.value = this.value; testContrast();">
        </th>
  </tr>


  <tr>
        <th class='tableTitle'colspan='3'>
          <span class="TXTinput">
          <input
            id="inputTXT"
            type="text"
            value=""
            onclick="this.select();"
            onkeyup="entryKeys(this.value,'TXT',event);"
            onblur="getCSScolor(this.value,'TXT'); testContrast();">
        </span><br>
        <span class="code" id="TXTvalidText"></span> 
        </th>


    <th class='tableTitle'colspan='3'><span class="TXTinput">
          <input
            id="inputBG"
            type="text"
            value=""
            onclick="this.select();"
            onkeyup="entryKeys(this.value,'BG',event);"
            onblur="getCSScolor(this.value,'BG'); testContrast();">
        </span><br>
        <span class="code" id="BGvalidText"></span> 
        </th>
  </tr>
      <tr id="scoreTableRowA">
        <th class='tableTitle'colspan='10'>

          All Font Sizes are in CSS px â¢ Fonts Under 80px Shown With Colors at Actual Size &amp; Weight
        </th>
  </tr>

  <tr class='weightHeader'>
    <th class='scoreHeader'>LEVEL</th>
      <th id="weight1" class="weight weight1">100</th>
      <th id="weight2" class="weight weight2">200</th>
      <th colspan='2' id="weight3" class="weight weight3">300<div class="weightWord">Light</div></th>
      <th colspan='2' id="weight4" class="weight weight4">400<div class="weightWord">Normal</div></th>
      <th id="weight5" class="weight weight5">500</th>
      <th id="weight6" class="weight weight6">600</th>
      <th colspan='2' id="weight7" class="weight weight7">700<div class="weightWord ">Bold</div></th>
      <th id="weight8" class="weight weight8">800</th>
      <th id="weight9" class="weight weight9">900</th>
  </tr>

  <tr id='tableScore5'>
    <th>Preferred</th>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>

  <tr id='tableScore4'>
    <th colspan='2'>SCORE 4</th>
    <td></td>
    <td></td>
    <td colspan='2'></td>
    <td colspan='2'></td>
    <td></td>
    <td></td>
    <td colspan='2'></td>
    <td></td>
    <td></td>
  </tr>

  <tr id='tableScore3'>
    <th>SCORE 3</th>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>

  <tr id='tableScore2'>
    <th>SCORE 2</th>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>

  <tr id='tableScore1'>
    <th>SCORE 1</th>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>
  
</table>
</div>
</div> <!-- Close Main Interface -->


<hr>

<h2 class="mastHead fs20"  style="">APCA BASIC for CONTENT CREATORS</h2>

<div id="demoArea"> 
  
    <div class="centered "><label class="tac por" for="URLresult">URL:&nbsp;&nbsp;&nbsp;</label><input class="tac por p05" type="text" id="URLresult" value="" onclick="this.select();"></div>
	<a id="colorURL" class="myndexButton tac por" role="button" tabindex="0" onkeypress="if(event.keyCode==32||event.keyCode==13){createColorURL('colorURL')};" style="width: 95%; margin: 0.5em auto; padding: 0.3em 0.65em;" onclick="createColorURL('colorURL')">Generate a URL of This Color Pair</a>

	<div id="colorWarn" class="" style="">
		<div style=""><button class="colorWarnX" style="" onclick="document.getElementById('colorWarn').style.display='none'"
		tabindex="0">&times;</button>
		<h3 style="">Please Enter Valid Colors First!</h3>
		</div>
	</div>
<script>
  let dialog = document.getElementById('colorWarn');
  window.onclick = function(event) {
    if (event.target == dialog) {
    dialog.style.display = "none";
    }
  }
</script>
</div> <!--    ********    Close Demo Area ********    -->         

<img alt="APCA the Revolution will be readable" class="" style="position: relative; left: calc(50% - 455px);"  src="images/APCAcolor4.png">

<h2 class="mastHead h3Query"  style=""><em>APCA W3 PUBLIC BETA</em></h2>
<p class="por onWhiteSpace" >We'd love to hear your comments, questions, or concernsâcome visit our <a href="https://github.com/Myndex/SAPC-APCA/documentation">GitHub repo</a> and let us know in the <a href="https://github.com/Myndex/SAPC-APCA/discussions">discussions forum.</a>


<hr class="clb" style="">    
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
   style="display:block; text-align:center;"
   data-ad-layout="in-article"
   data-ad-format="fluid"
   data-ad-client="ca-pub-8528204478975741"
   data-ad-slot="8819425657"></ins>
<script async>
   (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<hr class="clb" style="">

<section class="explainer">

 <h2 id="accessible-contrast" class="h1Query" style="">Accessible Contrast </h2>
  <h3 id="font-size-and-weight" class="h3Query" style="">Relative to Font Size and Weight</h3> 

 <p>APCA reports contrast as an Lc&nbsp;value (lightness contrast) from <strong>Lc&nbsp;0</strong> to <strong>Lc&nbsp;105+</strong>. For accessibility, consider Lc&nbsp;15 the point of invisibility for many users, and Lc&nbsp;90 is preferred for body text.</p>

<hr>
<details>
  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span>
  <h3 style="font-weight: 400;" id="general-guidelines-on-levels" class="h1Query Luv275 pb00 mb00">General Guidelines<div style="margin: 0; padding: 0; font-style:oblique; font-size: 0.8em;">For Simple to Use Levels</div></h3></summary>
  <p>These general levels are appropriate for use without reference to the lookup table. The lookup table simply adds additional accuracy, which allows for greater flexibility.</p>
 
<ul>
<li><strong>Lc&nbsp;90</strong> â¢ Preferred level for fluent text and columns of body text with a font no smaller than 18px/weight 300 or 14px/weight 400 (normal), or non-body text with a font no smaller than 12px. Also a recommended minimum for extremely thin fonts with a minimum of 24px at weight 200. Lc&nbsp;90 is a <em>suggested maximum</em> for <strong>very large and bold fonts</strong> (greater than 36px bold), and large areas of color.</li>
<li><strong>Lc&nbsp;75</strong> â¢ The <em>minimum</em> level for columns of body text with a font no smaller than 24px/300 weight, 18px/400, 16px/500 and 14px/700. This level may be used with non-body text with a font no smaller than 15px/400. Also, Lc&nbsp;75 should be considered a minimum for larger for any larger text where readability is important.</li>
<li><strong>Lc&nbsp;60</strong> â¢ The <em>minimum</em> level recommended for content text that is not body, column, or block text. In other words, text you want people to read. The minimums: no smaller than 48px/200, 36px/300, 24px normal weight (400), 21px/500, 18px/600, 16px/700 (bold). These values based on the reference font Helvetica. To use these sizes as body text, add Lc&nbsp;15.</li>
<li><strong>Lc&nbsp;45</strong> â¢ The <em>minimum</em> for larger, heavier text (36px normal weight or 24px bold) such as headlines, and large text that should be fluently readabile but is not body text. This is also the minimum for pictograms with fine details, or smaller outline icons.</li>
<li><strong>Lc&nbsp;30</strong> â¢ The <em>absolute minimum</em> for any text not listed above, including text considered as &quot;spot readable&quot;. This includes placeholder text and disabled element text, and some non-content like a copyright bug. This is also the minimum for large/solid semantic &amp; understandable non-text elements such as &quot;mostly solid&quot; icons or pictograms. Generally no less than 4px in its smallest dimension.</li>
<li><strong>Lc&nbsp;15</strong> â¢ The <em>absolute minimum</em> for any non-text that needs to be <em>discernible</em> and differentiable, and is no less than 6px in its smallest dimention. This may include dividers, and in <em>some</em> cases large buttons or thick focus visible outlines, but does <em>not</em> include fine details which have a higher minimum. <strong>Designers should treat anything below this level as invisible</strong>, as it will not be visible for many users. This minimum level should be avoided for any items important to the use, understanding, or interaction of the site.</li>
</ul>
<p>These define the basic minimum levels, what you might think of as A/AA in the old WCAG&nbsp;2. For the equivelent to AAA, simply increase the contrast values by Lc&nbsp;15.</p>
 </details>
<hr>
<details>
  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span><h3 class="Luv275 fw6 h3Query" style="">NOTES ON FONT SIZE</h3></summary>
<ul>
<li>Font sizes listed above assume an x-height ratio of at least 0.52. Font weight is based on highly standardized reference fonts such as Helvetica or Arial. &quot;px&quot; means the CSS reference px, not device pixels. The reference px is defined as 1.278 arc minutes of visual angle.</li>
<li>When selecting, or testing, a font size, all that needs to be done is to compare the x-height to the reference.<ul>
<li>For instance, Times New Roman has an x-height ratio of 0.45, so it needs to be increased about 16% in size.</li>
</ul>
</li>
<li>For font weight, simply set a line of test text in the reference Arial or Helvetical at 400 weight and then below that the same text text in the new font. Try different weights to find the closest match.<ul>
<li>As an example, the font Raleway 400 weight is closest to Helvetica 300.</li>
<li>So, always add 100 in weight to Raleway to be equivelent.</li>
<li>See <a href="https://github.com/Myndex/SAPC-APCA/discussions/28#discussioncomment-1610289">this discussion answer</a> for more.</li>
</ul>
</li>
<li>Consider the font design as well as the basic size and weight, and the potential impact on readability. See <a href="https://www.researchgate.net/publication/338149302_Evaluating_Fonts_Font_Family_Selection_for_Accessibility_Display_Readability">this PDF <strong>&quot;Evaluating Fonts&quot;</strong></a> for general guidance and a comparison of a few dozen fonts for accessibility.</li>
</ul>
 </details>
 
 <details>

  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span><h3 id="bridge-pca" class="Luv275 fw6 h3Query" style="">NOTES ON WCAG&nbsp;2 COMPATIBILITY </h3></summary>

  <p>To use the APCA tool for minimum Bridge-PCA conformance (backwards compatible for WCAG&nbsp;2):
    <ul>
    <li><b>90</b> â¢ Lc 90 replaces WCAG <b>7:1</b>
    <li><b>75</b> â¢ Lc 75 replaces WCAG <b>4.5:1</b>
    <li><b>60</b> â¢ Lc 60 replaces WCAG <b>3:1</b>
    <li><b>WoB</b> â¢ For light text on a darker background, when the text is lighter than <cpde> #eee </code>, increase the minimum value by Lc 10. The dedicated Bridge-PCA tool takes this into account automatically.
    </ul>
    <p><strong>NEW!!</strong> If you need to be backwards compatible, the new Bridge-PCA can help! <a href="/BPCA/">Bridge PCA</a> is backwards compatible with WCAG&nbsp;2, shows contrast as both Lc value, <em>and</em> the traditional WCAG&nbsp;2ratios, but with a twist: The "ratios" shown on Bridge PCA are perceptually accurate!
    <p>This is possible because Bridge PCA uses APCA technology to generate "ratios" that look and feel very much like those of WCAG 2.

 </details>
 
<hr>
  <details>

  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span><h2 class="h1Query Luv265 fw7 " style="">Using the Font Lookup Table for Greater Flexibility</h2></summary>

    <p>The table below is current as of January 27, 2022.</p>

  <ul>
    <li>Cross index reference font size (in CSS px) to CSS weight. 
    <li>Reference fonts for comparison include Barlow, Helvetica Neue, Helvetica, Fira Sans, Kanit, and Arial.
    <li>APCA Contrast <span class="Lc">L<sup>c</sup></span> value must meet or exceed the value listed, however, values may be interpolated between the two closest values.
    <li>For light text on a dark background the APCA tool will show a negative <span class="Lc">L<sup>c</sup></span> value. Simply use the absolute (positive) value. For example, if the APCA value is <span class="Lc">L<sup>c</sup>-58</span>, use <span class="Lc">L<sup>c</sup></span>&nbsp;58.   
    <li>A<span class="underWeightSpan"> &osol; </span>indicates that a larger font size (or heavier font weight) must be used. 
    <li>Cells marked with <span class="fwb fs15 bodyText"></span> may be used for body text. The the body text cells outlined in yellow, add lc 15.
  </ul>

  <div id="lookup-table" style="overflow: scroll;">
    <table class="APCAtable">
        <tr>
          <th colspan="11" class="tableTitle" style="	border-radius: 18px 18px 0 0;
 height: 2em; font-size: 1.5em;">APCA CONTRAST LOOKUP TABLE</th>
        </tr>
              <tr>
          <th colspan="11" class="tableTitle" style="height: 1.1em; padding: 0 0 12px; font-size: 1em; font-weight: 300; vertical-align: top; letter-spacing: 0.2em;">Public Beta 0.1.5 (G) â¢ January 27, 2022</th>
        </tr>
        <tr>
          <th colspan="2" class="tableTitle" style="font-size: 1em;"></th>
          <th colspan="9" class="tableTitle" style="font-size: 1.2em; letter-spacing: 0.15em;">Reference Font Weight</th>
        </tr>
        
        <tr>
          <th colspan="2" class="tableTitle" style="font-size: 1em;">Font<br>Size</th>
          <th class="weight weight1">100</th>
          <th class="weight weight2">200</th>
          <th class="weight weight3">300</th>
          <th class="weight weight4">400<div class="">Normal</div></th>
          <th class="weight weight5">500</th>
          <th class="weight weight6">600</th>
          <th class="weight weight7">700<div class="">Bold</div></th>
          <th class="weight weight8">800</th>
          <th class="weight weight9">900</th>
        </tr>
        <tr style="">
          <th class="tableTitle" style="color: #8af2ff; background-color: #066; font-size: 1.1em;">pt</th>
          <th class="tableTitle" style="color: #fff; background-color: #28b; font-size: 1.1em;">px</th>     
          <th colspan="9" class="tableTitle" style="font-size: 1.1em; letter-spacing: 0.15em; color: #FFF; background-color: #629;">APCA Contrast Value (L<sup>c</sup>)</th>
        </tr>



<tr>
  <td class="ptText">9</td>
  <td class="pxText">12</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>

  <td class="copyOnly">Â©Â§â¢</td>
  <td class="copyOnly borderRight">Â©Â§â¢</td>
  
  <td class="copyOnly borderLeft">Â©Â§â¢</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
</tr>

<tr>
  <td class="ptText">10.5</td>
  <td class="pxText">14</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal95 bodyText">95</td>
  <td class="g4gVal90 bodyText borderRight">90</td>
  
  <td class="g4gVal85 bodyText borderLeft">85</td>
  <td class="g4gVal75 bodyText">75</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
</tr>

<tr>
  <td class="ptText">11.25</td>
  <td class="pxText">15</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal90 bodyText">90</td>
  <td class="g4gVal85 bodyText borderRight">85</td>
  
  <td class="g4gVal75 bodyText borderLeft">75</td>
  <td class="g4gVal70 bodyText">70</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
</tr>

<tr>
  <td class="ptText">12</td>
  <td class="pxText">16</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal85 bodyText">85</td>
  <td class="g4gVal80 bodyText borderRight">80</td>
  
  <td class="g4gVal70 bodyText borderLeft">70</td>
  <td class="g4gVal60 bodyTextPlus">60</td>
  <td class="g4gVal55 noBody">55</td>
  <td class="underWeight">â</td>
</tr>

<tr>
  <td class="ptText">12.75</td>
  <td class="pxText">17</td>
  <td class="underWeight">â</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal80 bodyText">80</td>
  <td class="g4gVal75 bodyText borderRight">75</td>
  
  <td class="g4gVal65 bodyTextPlus borderLeft">65</td>
  <td class="g4gVal55 bodyTextPlus">55</td>
  <td class="g4gVal50 noBody">50</td>
  <td class="g4gVal45 noBody">45</td>
</tr>

<tr>
  <td class="ptText">13.5</td>
  <td class="pxText">18</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal95 bodyText">95</td>
  <td class="g4gVal75 bodyText">75</td>
  <td class="g4gVal70 bodyText borderRight">70</td>
  
  <td class="g4gVal60 bodyTextPlus borderLeft">60</td>
  <td class="g4gVal50 bodyTextPlus">50</td>
  <td class="g4gVal45 noBody">45</td>
  <td class="g4gVal40 noBody">40</td>
</tr>

<tr>
  <td class="ptText">15.75</td>
  <td class="pxText">21</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal90 bodyText">90</td>
  <td class="g4gVal70 bodyText">70</td>
  <td class="g4gVal60 bodyTextPlus borderRight">60</td>
  
  <td class="g4gVal50 bodyTextPlus borderLeft">50</td>
  <td class="g4gVal45 bodyTextPlus">45</td>
  <td class="g4gVal40 noBody">40</td>
  <td class="g4gVal35 noBody">35</td>
</tr>

<tr>
  <td class="ptText">18</td>
  <td class="pxText">24</td>
  <td class="underWeight">â</td>
  <td class="copyOnly">Â©Â§â¢</td>
  <td class="g4gVal75 bodyText">75</td>
  <td class="g4gVal60 bodyTextPlus">60</td>
  <td class="g4gVal55 bodyTextPlus borderRight">55</td>
  
  <td class="g4gVal45 bodyTextPlus borderLeft">45</td>
  <td class="g4gVal40 noBody">40</td>
  <td class="g4gVal40 noBody">40</td>
  <td class="g4gVal35 noBody">35</td>
</tr>

<tr>
  <td class="ptText">21</td>
  <td class="pxText">28</td>
  <td class="underWeight">â</td>
  <td class="g4gVal95">95</td>
  <td class="g4gVal70 bodyText">70</td>
  <td class="g4gVal55 bodyTextPlus">55</td>
  <td class="g4gVal50 bodyTextPlus borderRight">50</td>
  
  <td class="g4gVal40 noBody borderLeft">40</td>
  <td class="g4gVal40 noBody">40</td>
  <td class="g4gVal35 noBody">35</td>
  <td class="g4gVal35 noBody">35</td>
</tr>

<tr>
  <td class="ptText">24</td>
  <td class="pxText">32</td>
  <td class="underWeight">â</td>
  <td class="g4gVal85">85</td>
  <td class="g4gVal65 bodyTextPlus">65</td>
  <td class="g4gVal50 bodyTextPlus">50</td>
  <td class="g4gVal45 bodyTextPlus borderRight">45</td>
  
  <td class="g4gVal40 noBody borderLeft">40</td>
  <td class="g4gVal35 noBody">35</td>
  <td class="g4gVal35 noBody">35</td>
  <td class="g4gVal30 borderLeftTop">30</td>
</tr>

<tr>
  <td class="ptText">27</td>
  <td class="pxText">36</td>
  <td class="underWeight">â</td>
  <td class="g4gVal75">75</td>
  <td class="g4gVal60 ">60</td>
  <td class="g4gVal45 ">45</td>
  <td class="g4gVal40  borderRight">40</td>
  
  <td class="g4gVal35  borderLeft">35</td>
  <td class="g4gVal35 ">35</td>
  <td class="g4gVal30 borderLeftTop">30</td>
  <td class="g4gVal30 ">30</td>
</tr>

<tr>
  <td class="ptText">36</td>
  <td class="pxText">48</td>
  <td class="g4gVal95 g4gLite">95</td>
  <td class="g4gVal60">60</td>
  <td class="g4gVal50 ">50</td>
  <td class="g4gVal40 ">40</td>
  <td class="g4gVal35  borderRight">35</td>
  
  <td class="g4gVal35  borderLeft">35</td>
  <td class="g4gVal30 borderLeftTop">30</td>
  <td class="g4gVal30 ">30</td>
  <td class="g4gVal30 ">30</td>
</tr>

<tr>
  <td class="ptText">45</td>
  <td class="pxText">60</td>
  <td class="g4gVal75 g4gLite">75</td>
  <td class="g4gVal50">50</td>
  <td class="g4gVal45 ">45</td>
  <td class="g4gVal40 ">40</td>
  <td class="g4gVal35  ">35</td>
  
  <td class="g4gVal30  borderLeftTop">30</td>
  <td class="g4gVal30 ">30</td>
  <td class="g4gVal30 noBody">30</td>
  <td class="g4gVal30 noBody">30</td>
</tr>

<tr>
  <td class="ptText">54</td>
  <td class="pxText">72</td>
  <td class="g4gVal65 g4gLite">65</td>
  <td class="g4gVal45">45</td>
  <td class="g4gVal40 ">40</td>
  <td class="g4gVal35 ">35</td>
  <td class="g4gVal30  borderLeftTop">30</td>
  
  <td class="g4gVal30  ">30</td>
  <td class="g4gVal30 ">30</td>
  <td class="g4gVal30 noBody">30</td>
  <td class="g4gVal30 noBody">30</td>
</tr>

<tr>
  <td class="ptText">72</td>
  <td class="pxText">96</td>
  <td class="g4gLite">50</td>
  <td class="g4gVal40 ">40</td>
  <td class="g4gVal35 ">35</td>
  <td class="g4gVal30 borderLeftTop">30</td>
  <td class="g4gVal30  ">30</td>
  
  <td class="g4gVal30  ">30</td>
  <td class="g4gVal30 ">30</td>
  <td class="g4gVal30 noBody">30</td>
  <td class="g4gVal30 noBody">30</td>
</tr>

<tr><th colspan="11" class="tableTitle" style="	border-radius:  0 0 12px 12px;
 height: 0.75em; font-size: 0.5em; font-weight: 300;"> Copyright Â© 2022 by Myndex Research. All Right Reserved.</th></tr>
</table>  

<p class="fs08">The vertical line between weights 500 and 600 indicates the point that a user agent switches from "normal" to "bold" if the intermediate weights are not available.
    
    <hr>


    <table class="centeredTable" style="background: #309; padding: 0; border-width: 4px; border-radius: 22px 22px 16px 16px ; border-collapse: separate; border-spacing: 0;" >
        <tr style="   color: #FFF; background-color: #309; border: 1px solid #94B; ">
          <th colspan="1" class="tableTitle" style="  text-align: center; height: 2em; font-size: 1.5em; border: 1px solid #94B; border-radius: 18px 18px 0 0;">APCA CONTRAST LEGEND</th>
        </tr>
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes underWeight"><span style="font-size:1.8em; line-height:0.2;">â</span> â Prohibited Except for Decorative Purposes</td>
        </tr>
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes nonText borderNT" tyle="border-width: 6px;"><span style="font-size:1.8em; line-height:0.7;"></span>Under Lc 30 is for non-text only.</td>
        </tr>        
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes copyOnly ffh"><span style="font-size:1.4em; font-weight:700;">Â©Â§â¢</span> â Placeholder/Disabled/Copyright ONLY</td>
        </tr>
<!--       <tr>
          <td class="colorCodes bgOrLt"><span style="font-size:1.8em; line-height:0.7;">&times;</span> â Do Not Use for Body Text (Blocks or Columns)</td>
        </tr>   -->
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes g4gLite cR" style="border-width: 10px;">Weight 100 Fonts Should be Avoided</td>
        </tr>   
         <tr style="background-color: #e8f5ff";>
          <td class="colorCodes bodyTextPlus" style="border-width: 9px;">To use as Block/Body Text, ADD Lc 15</td>
        </tr>         
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes bodyText" style="border-width: 12px;">Block/Body Text Zoneâokay minimum values</td>
        </tr>  
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes  g4gVal90 borderVisible">APCA Lc 90 â "Similar" to ISO 10â¶1 </td>
        </tr>     
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes  g4gVal75 borderVisible">APCA Lc 75 â "Similar" to WCAG 7â¶1 </td>
        </tr>       
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes  g4gVal60 borderVisible">APCA Lc 60 â "Similar" to WCAG 4.5â¶1 </td>
        </tr>
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes  g4gVal45 borderVisible">APCA Lc 45 â "Similar" to WCAG 3â¶1 </td>
        </tr>
        <tr style="background-color: #e8f5ff";>
          <td class="colorCodes g4gVal30 borderVisible"><span style="font-size:1.2em; font-weight:700;">&gt; 30</span> â Minimum Contrast for Any Text</td>
        </tr>
     <tr><th class="colorCodes tableTitle" style="border-radius: 0 0 12px 12px; height: 0.75em; text-align: center; font-size: 0.6em; font-weight: 300; color: #fff; background: #309;"> Copyright Â© 2022 by Myndex Research. All Right Reserved.</th></tr>   
  </table>
</div>
<hr>

  <div id="lookup-table" style="overflow: scroll;">
    <table class="APCAtable ">
        <tr>
          <th colspan="11" class="tableTitle" style="	border-radius: 18px 18px 0 0;
 height: 2em; font-size: 1.5em;">APCA Sorted by Contrast</th>
        </tr>
              <tr>
          <th colspan="11" class="tableTitle" style="height: 1.1em; padding: 0 0 12px; font-size: 1em; font-weight: 300; vertical-align: top; letter-spacing: 0.2em;">Public Beta 0.1.5 (G) â¢ January 27, 2022</th>
        </tr>
        <tr>
          <th colspan="2" class="tableTitle" style="font-size: 1em;"></th>
          <th colspan="9" class="tableTitle" style="font-size: 1.2em; letter-spacing: 0.15em;">Reference Font Weight</th>
        </tr>
        <tr>
          <th colspan="2" class="tableTitle" style="font-size: 1em;">APCA<br>Contrast</th>
          <th class="weight weight1">100</th>
          <th class="weight weight2">200</th>
          <th class="weight weight3">300</th>
          <th class="weight weight4">400</th>
          <th class="weight weight5">500</th>
          <th class="weight weight6">600</th>
          <th class="weight weight7">700</th>
          <th class="weight weight8">800</th>
          <th class="weight weight9">900</th>
        </tr>
        <tr style="">
          
          <th colSpan="2" class="tableTitle" style="color: #fff; background-color: #28b; font-size: 1.1em;">(L<sup>c</sup>)</th>     
          <th colspan="9" class="tableTitle" style="font-size: 1.1em; letter-spacing: 0.15em; color: #FFF; background-color: #629;">Font Size in px</th>
        </tr>

<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;100</th>
<td class="g4gLite2  wgt100  pxText">46.5</td>
<td class=" noBody  wgt200  pxText minSize">28</td>
<td class=" bodyText2 wgt300  pxText minSize">18</td>
<td class="g4gFontTbl100 bodyText2  wgt400  pxText minSize">14</td>
<td class="g4gFontTbl100 bodyText2  borderRight  wgt500  pxText minSize">14</td>
<td class="g4gFontTbl100 bodyText2 borderLeft wgt600  pxText minSize">14</td>
<td class="g4gFontTbl100 bodyText2  wgt700  pxText minSize">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>

</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;95</th>
<td class="g4gLite2  wgt100  pxText">48.5</td>
<td class="g4gFontTbl95 noBody wgt200  pxText">29</td>
<td class="g4gFontTbl95 bodyText2 wgt300  pxText">20.5</td>
<td class="g4gFontTbl95 bodyText2 wgt400  pxText">14.5</td>
<td class="g4gFontTbl95 bodyText2  borderRight wgt500  pxText">14</td>
<td class="g4gFontTbl95 bodyText2 borderLeft wgt600  pxText">14</td>
<td class="g4gFontTbl95 bodyText2 wgt700  pxText minSize">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;90</th>
<td class="g4gLite2 g4gFontTbl90 wgt100  pxText">50</td>
<td class="g4gFontTbl90 noBody wgt200  pxText">30</td>
<td class="g4gFontTbl90 bodyText2 wgt300  pxText">21</td>
<td class="g4gFontTbl90 bodyText2 wgt400  pxText">15</td>
<td class="g4gFontTbl90 bodyText2  borderRight  wgt500  pxText">14.5</td>
<td class="g4gFontTbl90 bodyText2  borderLeft wgt600  pxText">14</td>
<td class="g4gFontTbl90 bodyText2 wgt700  pxText">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;85</th>
<td class="g4gLite2 g4gFontTbl85 wgt100  pxText">53.5</td>
<td class="g4gFontTbl85 wgt200  pxText">32</td>
<td class="g4gFontTbl85 bodyText2 wgt300  pxText">22</td>
<td class="g4gFontTbl85 bodyText2 wgt400  pxText">16</td>
<td class="g4gFontTbl85 bodyText2 borderRight wgt500  pxText">15</td>
<td class="g4gFontTbl85 bodyText2   borderLeft wgt600  pxText">14</td>
<td class="empty bodyText2">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;80</th>
<td class="g4gLite2 80 wgt100  pxText">56.5</td>
<td class="g4gFontTbl80 wgt200  pxText">34</td>
<td class="empty bodyText2">23</td>
<td class="empty  bodyText2">17</td>
<td class="g4gFontTbl80  borderRight bodyText2  wgt500  pxText">16</td>
<td class="empty  borderLeft  bodyText2">14.5</td>
<td class="empty  bodyText2">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;75</th>
<td class="g4gLite2 g4gFontTbl75 wgt100  pxText">60</td>
<td class="g4gFontTbl75 wgt200  pxText">36</td>
<td class="g4gFontTbl75 bodyText2 wgt300  pxText">24</td>
<td class="g4gFontTbl75 bodyText2 wgt400  pxText">18</td>
<td class="g4gFontTbl75 bodyText2  borderRight wgt500  pxText">17</td>
<td class="g4gFontTbl75 bodyText2  borderLeft wgt600  pxText">15</td>
<td class="g4gFontTbl75 bodyText2 wgt700  pxText">14</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;70</th>
<td class="g4gLite2 empty">65</td>
<td class=" wgt200  pxText">39</td>
<td class="g4gFontTbl70 bodyText2 wgt300  pxText">27.5</td>
<td class="g4gFontTbl70 bodyText2 wgt400  pxText">19.5</td>
<td class="g4gFontTbl70 bodyText2  borderRight  wgt500  pxText">18</td>
<td class="g4gFontTbl70 bodyText2  borderLeft  wgt600  pxText">16</td>
<td class="empty bodyText2">14.5</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;65</th>
<td class="g4gLite2 empty">71.5</td>
<td class="g4gFontTbl65 wgt200  pxText">43</td>
<td class="g4gFontTbl65 bodyTextPlus2 wgt300  pxText">30.5</td>
<td class="empty bodyTextPlus2">21.5</td>
<td class="empty bodyTextPlus2 borderRight ">19.5</td>
<td class="empty bodyTextPlus2 borderLeft ">17</td>
<td class="empty bodyTextPlus2">15</td>
<td class=" noBody pxText minSize">16</td>
<td class=" noBody pxText minSize">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;60</th>
<td class="g4gFontTbl60 g4gLite2 wgt100  pxText">80</td>
<td class="g4gFontTbl60 wgt200  pxText">48</td>
<td class="g4gFontTbl60 bodyTextPlus2 wgt300  pxText">34</td>
<td class="g4gFontTbl60 bodyTextPlus2 wgt400  pxText">24</td>
<td class="g4gFontTbl60 bodyTextPlus2  borderRight wgt500  pxText">21</td>
<td class="g4gFontTbl60 bodyTextPlus2  borderLeft wgt600  pxText">18</td>
<td class="g4gFontTbl60 bodyTextPlus2 wgt700  pxText">16</td>
<td class="g4gFontTbl60 noBody pxText">16</td>
<td class="g4gFontTbl60 noBody pxText ">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;55</th>
<td class="g4gLite2 empty">86.5</td>
<td class="g4gFontTbl55 wgt200  pxText">52</td>
<td class="empty">37</td>
<td class="g4gFontTbl55 bodyTextPlus2 wgt400  pxText">26</td>
<td class="g4gFontTbl55 bodyTextPlus2  borderRight  wgt500  pxText">20.5</td>
<td class="empty bodyTextPlus2 borderLeft  ">18.5</td>
<td class="g4gFontTbl55 bodyTextPlus2 wgt700  pxText">16.5</td>
<td class="g4gFontTbl55 noBody pxText">16</td>
<td class="g4gFontTbl55 noBody pxText">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;50</th>
<td class="nonText2">92.5</td>
<td class="empty">58</td>
<td class="g4gFontTbl50 wgt300  pxText">41</td>
<td class="g4gFontTbl50 bodyTextPlus2 wgt400  pxText">29</td>
<td class="g4gFontTbl50 bodyTextPlus2  wgt500  pxText">22</td>
<td class="g4gFontTbl50 bodyTextPlus2  borderLeft  wgt600  pxText">20</td>
<td class="empty bodyTextPlus2">17.5</td>
<td class="empty">16.5</td>
<td class="empty">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;45</th>
<td class="nonText2 wgt100  pxText">120</td>
<td class="g4gFontTbl45 45 wgt200  pxText">72</td>
<td class="g4gFontTbl45 wgt300  pxText">51</td>
<td class="g4gFontTbl45 bodyTextPlus2 wgt400  pxText">36</td>
<td class="g4gFontTbl45 bodyTextPlus2  borderRight  wgt500  pxText">27</td>
<td class="g4gFontTbl45 bodyTextPlus2  borderLeft  wgt600  pxText">23.5</td>
<td class="g4gFontTbl45 bodyTextPlus2 wgt700  pxText">20</td>
<td class="g4gFontTbl45 noBody pxText">18</td>
<td class="g4gFontTbl45 noBody pxText">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;40</th>
<td class="nonText2">160</td>
<td class="nonText2">96</td>
<td class="g4gFontTbl40 wgt300  pxText">68</td>
<td class="g4gFontTbl40 wgt400  pxText">48</td>
<td class="g4gFontTbl40  borderRight  wgt500  pxText">34</td>
<td class="g4gFontTbl40 borderLeft  wgt600  pxText">29</td>
<td class="g4gFontTbl40  wgt700  pxText">24</td>
<td class="g4gFontTbl40 noBody pxText">19</td>
<td class="g4gFontTbl40 noBody pxText">18</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;35</th>
<td class="nonText2">220</td>
<td class="nonText2">132</td>
<td class="g4gFontTbl35 wgt300  pxText">93.5</td>
<td class="g4gFontTbl35 wgt400  pxText">66</td>
<td class="g4gFontTbl35  borderRight wgt500  pxText">46.5</td>
<td class="g4gFontTbl35 borderLeft wgt600  pxText">40</td>
<td class="g4gFontTbl35 wgt700  pxText">33</td>
<td class="g4gFontTbl35  pxText">26.5</td>
<td class="g4gFontTbl35  pxText">20</td>
</tr>
<tr>
<th style="font-weight: 600; text-align: right;">Lc</th><th style="font-size: 1.2em; text-align: left;">&nbsp;30</th>
<td class="nonText2">320</td>
<td class="nonText2">192</td>
<td class="g4gFontTbl30  wgt300  pxText">135</td>
<td class="g4gFontTbl30  wgt400  pxText">96</td>
<td class="g4gFontTbl30  borderRight  wgt500  pxText">68</td>
<td class="g4gFontTbl30 borderLeft wgt600  pxText">58</td>
<td class="g4gFontTbl30  wgt700  pxText">48</td>
<td class="g4gFontTbl30  pxText">38.5</td>
<td class="g4gFontTbl30  pxText">29</td>
</tr>
<tr><th colspan="11" class="tableTitle" style="	border-radius:  0 0 12px 12px;
 height: 0.75em; font-size: 0.5em; font-weight: 300;"> Copyright Â© 2022 by Myndex Research. All Right Reserved.</th></tr>
</table>
    
  </div>
  <ul>
    <li>Values shown are for common sans-serif fonts (e.g., Helvetica, Arial, Verdana, Montserrat, Roboto, Calibri, Trebuchet).
    <li>Many serif fonts should use values for the row above (e.g., Times, Georgia, Cambria, Courier), and especially should be compared in terms of x-height.
    <li>Decorative, unusual, and very thin fonts should be avoided for fluently readable text and especially columns of body text.  
    <li>Due to the vast variety of font designs, designers should visually compare an unusual font to a standard font such as Helvetica, using the size and weight of Helvetica that most closesly matches the appearance of the tested font as a guide.
    <li>Designers are cautioned that bypassing default font smoothing can drastically reduce contrast for small or thin fonts. For instance, the use of "-webkit-font-smoothing: antialiasing" is strongly discouraged.  
  </ul>
 </details>
 

</section><!-- ********    Close Guidlines Section     ********    -->

<hr class="clb mb0" style=""> 
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
   style="display:block; text-align:center;"
   data-ad-layout="in-article"
   data-ad-format="fluid"
   data-ad-client="ca-pub-8528204478975741"
   data-ad-slot="8819425657"></ins>
<script async>
   (adsbygoogle = window.adsbygoogle || []).push({});
</script>

<hr class="clb mt0" style="">

<section id="apca-science" class="explainer"> 

<details>

  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span><h2 class="mastHead h1Query"  style="" id="the-accessible-perceptual-contrast-algorithm">The Accessible Perceptual Contrast Algorithm</h2></summary>

<p>APCA is a new method for calculating and predicting readability contrast. APCA is a part of the larger S-Luv Accessible Readability Color Appearance Model known as SARCAM (formerly SAPC). These models are specifically related to color appearance on self-illuminated RGB computer displays &amp; devices, and also for modeling accessible user needs, with a focus on readability.</p>

<h3 class="h3Query" style="" id="lightness-contrast">Lightness contrast L<sup>c</sup></h3>

<p>The APCA generates a contrast value based on a color pair, and this value is perceptually based: that is, regardless of how light or dark the colors are, a contrast value of Lc&nbsp;60 represents the same <em>perceived</em> readability contrast. This is absolutely not the case with WCAG&nbsp;2.x, which far overstates contrast for dark colors to the point that 4.5:1 can be functionally unreadable when a color is near black. As a result, WCAG&nbsp;2.x contrast cannot be used for guidance designing &quot;dark mode&quot;.</p>
<p>The APCA contrast value is perceptually uniform, and pivots near the point where the CS curve flattens due to contrast constancy. Halving or doubling the APCA value relates to a halving or doubling of the perceived contrast. There is a subtle weighting for higher contrasts to smaller, thinner fonts.</p>

<h3 class="h3Query" style="" id="different-uses-different-contrasts">Different Uses, Different Contrasts</h3>
<p>The APCA has a set of levels related to use cases â for instance, Lc&nbsp;90 is <em>preferred</em> and Lc&nbsp;75 is the <em>minimum</em> for body text. This makes for an easy way to use ACPA, very similar to 1.4.3 in terms of ease of use.</p>
<p>The APCA also has an <strong>optional</strong> lookup table to associate font size and weight to the readability contrast (Lc&nbsp;value). The lookup tables allow for even greater accuracy and therefore greater flexibility in design.</p>

<h3 class="h3Query" style="" id="failing-pass-fail">Failing Pass/Fail</h3>
<p>A key takeaway is that a strict pass/fail with a blanket contrast ratio is not instructive as a guideline, and does not necessarily solve a given user need. In fact, user needs when it comes to contrast are conflictingâwhat is good for one can be harmful to another. This is even true of font size. </p>
<p>This points to the importance of real user personalization, an area where the technology is literally missing (and a work in progress). For the guidelines though, we can set ranges for targets and expectations toward making the web readable for all.</p>

    </details>
<hr>      
  <details>
  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#34028b" fill="#230167"/></svg></span><h2 class="h2Query" style="color: #308;">The Science Behind SAPC/APCA</h2></summary>
  <h3 class="h3Query" style="text-align: center;"><b>A</b>ccessible <b>P</b>erceptual <b>C</b>ontrast <b>A</b>lgorithm</h3>

  <div>
    <p class="dropCapSimple">For a brief overview and explanation of the SAPC math and methods, take a look at <a id="null02" href="/WEB/WCAG_CE17polarity">Experiment Results CE17</a>, one of the polarity experiments. The discussion includes graphs comparing SAPC to other contrast methods, and related discussions.</p>
    <p>Also, as spatial frequency is one of the most important predictors of contrast perception and readability, see <a id="null03" href="/WEB/WCAG_CE14weight">Experiment Results CE14-weight</a> for further explanations.</p>
    <p><span class="fw6">The "TL;DR" is:</span > like all human perceptions, color and contrast are extremely context dependent. In terms of readability, there is a "critical contrast" level, and that level is more dependent on spatial frequency, which relates to font weight, than a given color pair. </p>
    <p>To accurately predict contrast perception, the Spatial <em>(font weight &amp; size)</em>, color <em>(perceived lightness difference between text and background)</em>, and context <em>(ambient light, surroundings, intended purpose of the text)</em> all need to be taken into account.</p>
  <h3 class="h3Query" style="text-align: center;">What is the Contrast of This Page?</h3>
    <p>Most of this page is set at over 120 in "old" APCA numbers, which now is approximately <span class="Lc">L<sup>c</sup></span>90. To help differentiate between dark text on a light background and light text on dark, the math reports the latter as a negative value. But for purposes of the font lookup table, ignore the minus sign and use the absolute value.</p>
    </details>
  </div>
</section><!-- ********    Close Science Links Section     ********    -->
 <div class="m15" style="">   
    <a id="null04" href="/WEB/Perception" aria-label="Go Back to Percepton Experiments">
    <button class="myndexButton queryButton m20 fll" style="min-width: 510px; max-height: 80px;">
    <div class="fll" style="padding: 0.1em 4px; font-family: 'Palatino', 'Georgia','Bookman', 'Times New Roman','Times','serif'; letter-spacing: 0.01em; line-height: 0.2; font-size: 2em; font-style: normal;">&Delta;&gamma; &nbsp;
      </div>Myndex Perception Research Experimental Results Listing</button>
    </a>
  
    <a id="null05" href="/CVD/" aria-label="Go Back to Percepton Experiments">
    <button class="myndexButton queryButton m20 flr" style="padding: 0.3em;">
    <img class="fll " role="presentation" alt="icon" style="margin: 0.3em; padding: 0" src="/CVD/faviconMasterSmall.jpg"  height="40">
      <div class="flr" style="margin: 0.3em; padding:0;" >Myndex&nbsp;Color&nbsp;Vision <br>Deficiency&nbsp;Simulator</div></button>
    </a> 
  <div class="clearfix"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </div>
 
 </div>

<hr class="clb mt0" style="">
<div class="gammaContainer" style="Margin: 0;"><details>
  <summary><span class="twistUp"><svg xmlns="http://www.w3.org/2000/svg" height="36px" viewBox="0 0 24 24" width="36px" fill="none"><path d="M0 0h24v24H0V0z" fill="none"/><path d="M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 13l-4-4h8z" stroke="#ddeeff" fill="#ffffff"/></svg></span><h2 class=" tal ml25 cW">MONITOR GAMMA CHECK</h2></summary>
   
   <div class=" centered gamma " style="">sRGB gamma target. Ideally the targets appear uniform (i.e. the thick border looks the same as the inner grid). It is important that the image be at 100% and not scaled - make sure your browser says "actual size".<br>

<p>These gamma targets require a 2:1 retina display.

<fieldset>
<div id="gammaBoxDith96" class="gammaBox"><span class="gammaLabel cGrE">Target #96 (2.6)</span></div>

<div id="gammaBoxDithC3" class="gammaBox"><span class="gammaLabel cGr7">Target #c3 (2.6)</span></div>

<div id="gammaBoxDithE4" class="gammaBox"><span class="gammaLabel cGr9">Target #e4 (2.6)</span></div>
</fieldset>

<fieldset>
<div id="gammaBoxDith93" class="gammaBox"><span class="gammaLabel cGrE">Target #93 (2.5)</span></div>

<div id="gammaBoxDithC1" class="gammaBox"><span class="gammaLabel cGr7">Target #c1 (2.5)</span></div>

<div id="gammaBoxDithE3" class="gammaBox"><span class="gammaLabel cGr9">Target #e3 (2.5)</span></div>
</fieldset>

<fieldset>
<div id="gammaBoxDith8F" class="gammaBox"><span class="gammaLabel cGrE">Target #8f (2.4)</span></div>

<div id="gammaBoxDithBF" class="gammaBox"><span class="gammaLabel cGr7">Target #BF (2.4)</span></div>

<div id="gammaBoxDithE2" class="gammaBox"><span class="gammaLabel cGr9">Target #e2 (2.4)</span></div>
</fieldset>

<fieldset>
<div id="gammaBoxDith88" class="gammaBox"><span class="gammaLabel cGrE">Target #88 (2.2)</span></div>

<div id="gammaBoxDithBA" class="gammaBox"><span class="gammaLabel cGr7">Target #ba (2.2)</span></div>

<div id="gammaBoxDithE0" class="gammaBox"><span class="gammaLabel cGr9">Target #e0 (2.2)</span></div>
</fieldset>

   </div></details>
</div>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
   style="display:block; text-align:center;"
   data-ad-layout="in-article"
   data-ad-format="fluid"
   data-ad-client="ca-pub-8528204478975741"
   data-ad-slot="8819425657"></ins>
<script async>
   (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<footer>
  <a id="null06" href="/CVD/" aria-label="Go to the Color Vision Simulator"><button class="myndexButton flr mr20 fs10"><img class="fll " style="margin: 0 0.6em 0 0; padding: 0" src="/CVD/faviconMasterSmall.jpg"  height="60"><div class="flr " style="margin: 0.2em; padding:0;" >Myndex&nbsp;Color&nbsp;Vision <br>Deficiency&nbsp;Simulator</div></button></a>   
    
  <div style="font-size: 12px;">Copyright &copy; 2019 â 2022 by Andrew Somers. All Rights Reserved.
    <br><b>THIS PAGE IS PROPRIETARY AND NOT LICENSED FOR THIRD PARTY USE.</b>
    <br>Public License options at the SAPC/APCA Repository:
    <br><a href="https://github.com/Myndex/SAPC-APCA/">https://github.com/Myndex/SAPC-APCA/</a>
    <br>This project is part of the <a href="https://www.myndex.com/WEB/Perception" aria-label="Go Back to Percepton Experiments">Myndex Web Perception Experiment.</a>
    
  </div>

  <div class="copyright fs07 lh10">Copyright &copy; 2019 â 2022 by MTI.  All Rights Reserved. â¢<br>
        <i>"Myndex" and the Myndex Eye Logo are trademarks of Myndex Technologies.</i><br>


  </div>
  </div>
</footer>
</main>
<script>

////////////////////////////////////////////////////////////////////////////////
/////////  FOOTER FUNCTIONS  ///////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/////////  DEBUG AND COLOR ANALYSIS FUNCTIONS //////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/
//~/~  RESEARCH ONLY ITEM: kitchenSink  ~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/
//~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/~/

//*  //  SWITCH A
function kitchenSink(type) { 
  
  return '<div class="tac cW bgN br05 fs20 fw3 ">The Kitchen Sink is Leaking Again</div>';
}
// */ // END SWITCH A


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/////////  CONFORMANCE SCORING CONSTANTS AND ARRAYS  \//////////////////////////
////////                                              \/////////////////////////
///////                                                \////////////////////////


////////////////////////////////////////////////////////////////////////////
/////////////  NEW D SERIES    \///////////////////////////////////////////

  const scoreLevels1GG = [15,30,45,60,75,90,105];
  const scoreLevels1GGlen = scoreLevels1GG.length;

  const sansIndex = [0,1,2,3,4,5,6,];
  const sansIndexLen = sansIndex.length;
  const serifIndex = [false,1,2,3,4,5,6,];
    
    // for the score array needed for the original samples section
function createScoreArray (aLevels,aLength,bLevels,bLength) {
  
  let tempArray = [[]];
  let xDimLen = bLevels[0].length;
  let xi = 0, ai = 0, bi = bLength - 1, ti = 0;

  for (; xi < aLength; xi++) {  // instantiate tempArray
    tempArray[xi] = bLevels[xi].slice(0,xDimLen);
  }

  for (; ai < aLength; ai++) { // Set tempArray values
    bi = bLength - 1;
    for (; bi > 0; bi-- ) {
      if ( aLevels[ai] == bLevels[bi][0] ) {
        ti = 0;
        tempArray[ai][xDimLen - 1] = bLevels[bi][ti];
        for (; ti < xDimLen - 1; ti++){
          tempArray[ai][ti] = bLevels[bi][ti + 1];
        }
      } 
    } 
  } 
          //console.log(tempArray);
  return tempArray;
}


// For the following arrays, the Y axis is contrastArrayLen
// The two x axis are weightArrayLen and scoreArrayLen
// const contrastArrayG = [200,110,100,90,80,70,60,55,50,45,40,35,30,25,20,15,12,11,7,0,];

// Jan 27 2022
const contrastArrayG = [200,120,105,100,95,90,85,80,75,70,65,60,55,50,45,40,35,30,25,20,15,10,0,];
const contrastArrayLenG = contrastArrayG.length;

const weightArray = [0,100,200,300,400,500,600,700,800,900];
const weightArrayLen = weightArray.length;

const scoreArray = [0,1,2,3,4,5];
const scoreArrayLen = 6;


 //////////////////////////////////////////////////////////////////////////
/////  FONT TABLE DIALOGS  \//////////////////////////////////////////////


const scoreColor = ['c00','b60','9a7900','08a','008d00','a0e'];

const normalColspan = ''; // colspan="1"
const simpleColspan = 'colspan="2"';
const mobileColspan = 'colspan="2"';


let mode = 'simple'; // 'normal' 'simple' 'mobile'
let tableScore4 = document.getElementById('tableScore4');   
let modeColspan = normalColspan;

if (mode === 'simple') { tableScore4.style = 'height: 120px; max-height: 120px;'; }


const scoreTextArray = ['<span class="fs25">&#x1F6AB</span>',
          'SCORE<br><span class="fs20 fw7">1</span>',
          'SCORE<br><span class="fs20 fw7">2</span>',
          'SCORE<br><span class="fs20 fw7">3</span>',
          'SCORE<br><span class="fs20 fw7">4</span>',
          '<span class="dib fs13 fw5" style="font-family: \'Barlow Condensed\';">PREFERRED<br>(5)</span>',
          '<span class="">SCORE</span>',];

const scoreTextArraySimple = ['<span class="fs35">&#x1F6AB</span>',
              '<span class="fs35 fw6">1</span>',
              '<span class="fs35 fw6">2</span>',
              '<span class="fs35 fw6">3</span>',
              '<span class="fs35 fw6">4</span>',
              '<span class="fs14 fw6">PREF</span>',
              '<span class="fs12">LEVEL</span>',];

const scoreTextArrayMobile = ['<span class="fs20">&#x1F6AB</span>',
              '<span class="fs20 fw7">1</span>',
              '<span class="fs20 fw7">2</span>',
              '<span class="fs20 fw7">3</span>',
              '<span class="fs20 fw7">4</span>',
              '<span class="dib fs11 fw5" style="font-family: \'Barlow Condensed\';">PREF</span>',
              '<span class="fs08 fw05">SCORE</span>',];
    // depreciate
const scoreTextProhibit = '<th><span class="fs20">&#x1F6AB</span></th>';



function ampSampTable9x5partA(){ 
    return  '<td colspan="9" rowspan="5" class="underWeightAll" style="color: var(--textColor, #123); background-color: var(--bgColor, #bad); padding: 12px; max-height: 388px; vertical-align: top;">';
  }
function ampSampTable9x5partAResearch(){ 
    return  '<td colspan="9" rowspan="5" class="underWeightAll researchCell" style="color: var(--textColor, #123); background-color: var(--bgColor, #123); padding: 12px; max-height: 388px; vertical-align: top;">';
  }


function ampSampTable9x5noSymbol(){ 
    return  '<span class="dib mt0 fs20 pr04 por pot04 lh05"> <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 120 120" width="100" height="100"><circle cx="60" cy="60" r="50" stroke=" var(--textColor, #123)" stroke-width="10" fill="none"/><line x1="28" y1="28" x2="92" y2="92" stroke=" var(--textColor, #123)" stroke-width="8"/></svg></span>';
    }

let ampSampTable9x5horsey = '<span class="dib fs20 pr02 por lh10" style="margin: -32px 24px 0 32px;  float: left;">â<br>â»<br>âï¸</span>';


function ampSampTable9x5AmpSamp () { 
    return  '<div id="ampSamp2" style="vertical-align: middle; font-size: 128px; color: var(--textColor, #123); border-color: var(--textColor, #123);">'
    
    + '<div class="montFont4 mb0" ><div class="dib por fs12 fw1" style="top:2px; left: -10px; font-family: Montserrat; letter-spacing:-0.16em;"><span class="fw9 ls02">I</span><span class="fw7 ls-04">I</span><span class="fw5 ls-07">I</span><span class="fw4 ls-09">II</span><span class="fw3 ls-11">III</span><span class="fw2 ls-14">IIII</span>IIIII</div>This is a NORMAL 12px Minimum Size TEXT EXAMPLE<div class="dib por fs12 fw1" style="top:2px; left: 12px; font-family: Montserrat; letter-spacing:-0.16em;">IIIII<span class="fw2 ls-14">IIII</span><span class="fw3 ls-11">III</span><span class="fw4 ls-07">II</span><span class="fw5 ls-03">I</span><span class="fw7 ls04">I</span><span class="fw9 ls05">I</span>&nbsp;</div></div>'
    
    + '<div class="montFont2 mb10" ><div class="dib por fs12 fw1" style="top:2px; left: -10px; font-family: Montserrat; letter-spacing:-0.16em;"><span class="fw9 ls02">I</span><span class="fw7 ls-04">I</span><span class="fw5 ls-07">I</span><span class="fw4 ls-09">II</span><span class="fw3 ls-11">III</span><span class="fw2 ls-14">IIII</span>IIIII</div>This is a THIN TEXT EXAMPLE<div class="dib por fs12 fw1" style="top:2px; left: 12px; font-family: Montserrat; letter-spacing:-0.16em;">IIIII<span class="fw2 ls-14">IIII</span><span class="fw3 ls-11">III</span><span class="fw4 ls-07">II</span><span class="fw5 ls-03">I</span><span class="fw7 ls04">I</span><span class="fw9 ls05">I</span>&nbsp;</div></div>'

    + '<div class="montFont2 m00" ><div class="dib por fs14 fw1 m0a" style="top:-8px; font-family: Montserrat,Jost; letter-spacing:-0.16em;">|||||<span class="fw2 ls-14">||||</span><span class="fw3 ls-11">|||</span><span class="fw4 ls-07">||</span><span class="fw5 ls-03">|</span><span class="fw7 ls04">|</span><span class="fw9 ls05">|</span>&nbsp;<span class="fw9 ls02">|</span><span class="fw7 ls-04">|</span><span class="fw5 ls-07">|</span><span class="fw4 ls-09">||</span><span class="fw3 ls-11">|||</span><span class="fw2 ls-14">||||</span>|||||</div></div>'   

    + '<div class="dib por fs07 fw1" style="top: -20px; right: 12px; font-family: Montserrat; letter-spacing: -16px;">III<span class="fw2">II</span><span class="fw3 ls-14">I</span><span class="fw4 ls-10">I</span><span class="fw5 ls-04">I</span><span class="fw7 ls04">I</span><span class="fw9 ls00">I</span>&nbsp;</div>'

    + '&amp; <div class="dib por fs07 fw1" style="top: -20px; left: -14px; font-family: Montserrat; letter-spacing: -16px;"><span class="fw9 ls03">I</span><span class="fw7 ls-05">I</span><span class="fw5 ls-10">I</span><span class="fw4 ls-14">I</span><span class="fw3 ls-16">I</span><span class="fw2">II</span>III</div>'
    
    + '<div class="helvetiFont mt12">â¢ This is a Small Bold Text Example â 12px at 700 Weight. â¢ </div>'
    + '</div>';
  }   
    
let ampSampTable9x5frownyClose = '<span class="dib mt0 fs25 pl04 por pot03 lh05">&#9785;</span></span></td>';


let ampSampTable9x5floatRight = '<span class="dib fs20 pr02 por lh10" style="margin: -32px 0 0 24px; float: right;">â<br>âï¸<br>â¯ï¸ï¸ï¸</span>';

let ampSampTable9x5Close = '</span></td>';


let loConMessage2Low = '<span class="dib mt01 fs09 p01 cR pbgR br05">&nbsp; &#9785; &#x1F6AB; Contrast Too Low for All &#x1F6AB; &#9785; &nbsp; </span>';

let loConMessage2LowSingle = ' class=" mt01 mnw100 mnh100 fs25 lh07 p10 cR lbgO br05 tac"> &#x1F6AB; </td>';

let loConMessage2LowRow = '<span class="dib p02 cR pbgP br05" style="margin 0; padding:6px; ">&nbsp;&#9785; &#x1F6AB; <span class="dib por pob02 fs07 lh05">Contrast Too Low for This Score Level</span> &#x1F6AB; &#9785;&nbsp; </span>';

let loConMessage2LowSimple = '<div style="margin 0; padding:0; position:relative; height: 60px; max-height: 60px;">'
   + '<span class="dib m00 cR pbgP br05" style="margin 0; padding:0px;"> &#x1F6AB;'
   + '<span class="dib por fs08 lh07">Contrast<br>Too Low</span> &#x1F6AB;</span> '
   + '<div class="dib por fs14 fw1 m00 lh06" style="margin:0; padding:0; font-family: Montserrat,Jost; letter-spacing:-0.16em;">'
   + '|||||<span class="fw2 ls-14">||||</span><span class="fw3 ls-11">|||</span><span class="fw4 ls-07">||</span><span class="fw5 ls-03">|</span><span class="fw7 ls04">|</span><span class="fw9 ls05">|</span><span class="fs160 ampSample">&amp;</span><span class="fw9 ls02">|</span><span class="fw7 ls-04">|</span><span class="fw5 ls-07">|</span><span class="fw4 ls-09">||</span><span class="fw3 ls-11">|||</span><span class="fw2 ls-14">||||</span>|||||'
   + '</div></div>' ;

let loConMessageBadColor = '<span class="dib mt01 fs09 p01 cR pbgO br05">&nbsp;&#9785; &#x1F6AB; Invalid Color Entry &#x1F6AB; &#9785; </span>';


function loConWarning9x5 () { 
    return  ampSampTable9x5partA() + loConMessage2Low + '<br>'
             + ampSampTable9x5noSymbol()
             + ampSampTable9x5AmpSamp()
             + ampSampTable9x5frownyClose;
  }

function badColorWarning9x5 () { 
    return  ampSampTable9x5partA() + loConMessageBadColor + '<br>'
             + ampSampTable9x5noSymbol()
             + ampSampTable9x5AmpSamp()
             + ampSampTable9x5frownyClose;
  }

function researchModeAlert9x5 () { 
    return  ampSampTable9x5partAResearch() + researchModeAlert + '<br>'
             + ampSampTable9x5horsey
             + ampSampTable9x5AmpSamp()
             + ampSampTable9x5floatRight
             + ampSampTable9x5Close;
  }

let loConWarningRow9x1 =
    '<td colspan="9" class="underWeight" style="background-color: #a04;">'
            + loConMessage2LowRow + '</td>';

function loConWarningRow8x1 () {
    return '<td colspan="8" class="fs22" style="color: #'+globalTXTcolor+';background-color: #'+globalBGcolor+';">'
            + loConMessage2LowSimple + '</td>';
}

function loConWarningRow9x1s () {
    return '<td colspan="9" class="fs22" style="margin 0; padding:0px; color: #'+globalTXTcolor+';background-color: #'+globalBGcolor+';">'
            + loConMessage2LowSimple + '</td>';
}

let loConWarningRow6x1 =
    '<td colspan="6" class="underWeight" style="background-color: #a04;">'
            + loConMessage2LowRow + '</td>';

function hiConAlertRow (scoreLev, columns) {

  let useAbove = (scoreLev == 4) ? 'Use the Preferred Level' :
                  'Use Score Level ' + (scoreLev + 1);
  
  return '<td colspan="'+columns+'" class="notApplicable NA'
      + scoreLev + ' fs14 fw6">Above Minimums for Level '
      + scoreLev + ', ' + useAbove + '</td>';
  }




////////////////////////////////////////////////////////////////////////////
///// G-Series Arrays from Spreadsheet of Lookup Tables \///////////////////
////   Based on empirical data collected 2019-2022      \//////////////////
///
//  G G G G G G G  UPDATED JAN 27 2022
//  (manual adjust for sc5)     
//  SCORE LEVEL:    
//  Master   1   2   3   4   5(aka: preferred)
   
const scoreLevelsPreCalcG = [
   [200,120,120,120,120,120],
    [120,120,120,120,120,120],
    [105,105,105,105,105,105],
    [100,100,100,100,100,100],
    [95,95,95,95,95,95],
    [90,90,90,90,90,90],
    [85,85,85,85,85,85],
    [80,80,80,80,80,80],
    [75,75,75,75,75,75],
    [70,70,70,70,70,70],
    [65,65,65,65,65,65],
    [60,60,60,60,60,60],
    [55,55,55,55,55,55],
    [50,50,50,50,50,50],
    [45,45,45,45,45,45],
    [40,40,40,40,40,40],
    [35,35,35,35,35,35],
    [30,30,30,30,30,30],
    [25,25,25,25,25,25],
    [20,20,20,20,20,20],
    [15,15,15,15,16,15],
    [10,10,10,10,11,14],
    [0,1.0,1.0,1.0,1.0,1.0]
    ];
    
    


/*
    // G G G G G UPDATED JAN 27 2022        
    // INTERPOLATED         
    // SCORE LEVEL      
    //  M 1 2 3 4 5

// */



const scoreDeltaG = [
    [200,1.0,1.0,1.0,1.0,1.0,],
    [120,1.0,1.0,1.0,1.0,1.0,],
    [105,1.0,1.0,1.0,1.0,1.0,],
    [100,5,5,5,5,5,],
    [95,5,5,5,5,5,],
    [90,5,5,5,5,5,],
    [85,5,5,5,5,5,],
    [80,5,5,5,5,5,],
    [75,5,5,5,5,5,],
    [70,5,5,5,5,5,],
    [65,5,5,5,5,5,],
    [60,5,5,5,5,5,],
    [55,5,5,5,5,5,],
    [50,5,5,5,5,5,],
    [45,5,5,5,5,5,],
    [40,5,5,5,5,5,],
    [35,5,5,5,5,5,],
    [30,5,5,5,5,5,],
    [25,5,5,5,5,5,],
    [20,5,5,5,5,5,],
    [15,5,5,5,5,5,],
    [10,5,5,5,5,5,],
    [0,1.0,1.0,1.0,1.0,1.0,]
  ];
  
///// CONTRAST   FONT WEIGHT & SIZE ///////////////////////////////////

// Font size interpolations. Here the chart was re-ordered to put
// the main contrast levels each on one line, instead of font size per line.

// G G G G G G  UPDATED JAN 31 2022                  
// ADJUSTED FOR G Interpolation                 

// 999 = prohibited   888 = 'OK'   777 = nonTextOnly

// FW 100 200 300 400 500 600 700 800 900


/*

// */


// lutG14xLcValue = ['Lc',100,200,300,400,500,600,700,800,900],

// 999: prohibited too low contrast
// 888: replaced with 400s  Ok at previous minimum 
// 777: NON TEXT at this minimum weight stroke
// 5xx - minimum font at this weight for content, 5xx % 500 for font-size
// 4xx - minimum font at this weight for any purpose], 4xx % 400 for font-size

// MAIN FONT LOOKUP Jan 31 2022  Sorted by Lc Value

const fontMatrixG = [  //  Jan 31 2022
['Lc',100,200,300,400,500,600,700,800,900],
[120,445,427,417,413.5,413.5,413.5,413.5,416,418],
[105,445,427,417,413.5,413.5,413.5,413.5,416,418],
[100,46.5,28,18,14,414,414,414,416,418],
[95,48.5,29,20.5,14.5,14,414,414,416,418],
[90,50,30,21,15,14.5,414,414,416,418],
[85,53.5,32,22,16,15,14,414,416,418],
[80,56.5,34,23,17,16,14.5,414,416,418],
[75,60,36,24,18,17,15,14,416,418],
[70,65,39,27.5,19.5,18,16,14.5,416,418],
[65,71.5,43,30.5,21.5,19.5,17,15,416,418],
[60,80,48,34,24,21,18,16,416,418],
[55,86.5,52,37,26,22,19.5,17,16,418],
[50,96.5,58,41,29,25,20,18,17,418],
[45,120,72,51,36,28,24,20,18,418],
[40,777,96,68,48,34,29,24,20,18],
[35,777,120,93.5,66,46.5,40,33,26.5,20],
[30,999,777,120,96,68,58,48,38.5,29],
[25,999,777,777,120,102,87,72,57.5,43],
[20,999,777,777,777,120,120,110,88,66],
[15,999,999,777,777,777,777,120,120,120],
[10,999,999,999,999,999,999,777,777,777],
[0,999,999,999,999,999,999,999,999,999],
];




// G G G G G G UPDATED JAN 31 2022 
// interpolation G  
// FW 100 200 300 400 500 600 700 800 900
  
// lutG14xLcDelta = ['Lcâ',100,200,300,400,500,600,700,800,900],

// MAIN FONT DELTA PRECALC Jan 31 2022 Sorted by Lc  rows higher  Jan 31 2022

const fontDeltaG = [ // rows ABOVE Jan 31 2022
['Lcâh',100,200,300,400,500,600,700,800,900,],
[120,0,0,0,0,0,0,0,0,0,],
[105,0,0,0,0,0,0,0,0,0,],
[100,1.5,1,1,0.5,0.5,0.5,0.5,0,0,],
[95,2,1,2.5,0.5,0,0,0,0,0,],
[90,1.5,1,0.5,0.5,0,0,0,0,0,],
[85,3.5,2,1,1,0.5,0,0,0,0,],
[80,3,2,1,1,1,0.5,0,0,0,],
[75,3.5,2,1,1,1,0.5,0,0,0,],
[70,5,3,3.5,1.5,1,1,0.5,0,0,],
[65,6.5,4,3,2,1.5,1,0.5,0,0,],
[60,8.5,5,3.5,2.5,1.5,1,1,0,0,],
[55,6.5,4,3,2,1,1.5,1,0,0,],
[50,10,6,4,3,3,0.5,1,1,0,],
[45,23.5,14,10,7,3,4,2,1,0,],
[40,0,24,17,12,6,5,4,2,0,],
[35,0,24,25.5,18,12.5,11,9,6.5,2,],
[30,0,0,26.5,30,21.5,18,15,12,9,],
[25,0,0,0,24,34,29,24,19,14,],
[20,0,0,0,0,18,33,38,30.5,23,],
[15,0,0,0,0,0,0,10,32,54,],
[10,0,0,0,0,0,0,0,0,0,],
[0,0,0,0,0,0,0,0,0,0,],
];




/////  MINIMUMS ARRAYS  ///////////////////////////////////////////////////
// Updated Jan 27 2022

    // Minimum font size per score level and weight
    // Weight S 1 2 3 4 5 6 7 8 9
const fontMatrixGmin = [
    ['sc0',32,16,12,10,9,8,8,10,12,],  // score: hard fail level
    ['sc1',36,16,12,10,10,10,10,12,14,], // score 1
    ['sc2',36,16,12,10,10,10,10,16,18,], // score 2
    ['sc3',36,16,12,11,11,11,11,16,18,], // score 3
    ['sc4',36,16,12,12,12,12,12,16,18,], // score 4
    ['sc5',48,28,24,20,18,16,15,16,18,], // score 5
  ];
    // Minimum font size per use case and score level
    // Score M 1 2 3 4 5
const fontSizeGtype = [
    ['maxBody',24,24,24,24,24,],    // MAX body text (not zoomed)
    ['minBody',12,12,14,14,18,],    // Min body text 
    ['maxContent',120,108,96,92,72,], // MAX content text
    ['minContent',10,11,12,13,14,],   // Min content text
    ['maxAny',144,120,120,108,96,],    // MAX anytext
    ['minAny',9,10,11,12,13,],      // Min anytext (copyright etc)
  ];
  
    // Contrast minimums per master level and score level
    // score M 1 2 3 4 5
const fontScoreGmin = [         // CONTRAST LEVELS
    [90,95,95,92,90,85,],   // 0 MAX Large Headlines (> 48px & 500)
    [75,68.4,71.8,73.4,74.8,90.0,], // 1 Min Cols of Body Text (manually set)
    [60,47.4,52.8,56.4,69.8,75.0,], // 2 Min Content Text 
    [45,33.4,34.8,37.4,44.8,50.0,], // 3 Min Large content text
    [30,22.0,24.0,27.0,29.8,45.0,], // 4 Min Any text, large icons (manual)
    [15,15,15,16.0,18.0,22.0,], // 5 Min for all (manually set)
  ];

const minScoreG = fontScoreGmin[5][1]; // Hard minimum contrast, all levels.
const nonTextScoreG = fontScoreGmin[4][4];

let scoreLevel = 0;

let scoreIndex = 4; //[0,1,2,3,4,5]; // holds score position

  // holds the calculated minimum font sizes per level
let interpolatedFonts = [ 
    [0,0,0,0,0,0,0,0,0,0,],
    [1,0,0,0,0,0,0,0,0,0,],
    [2,0,0,0,0,0,0,0,0,0,],
    [3,0,0,0,0,0,0,0,0,0,],
    [4,0,0,0,0,0,0,0,0,0,],
    [5,0,0,0,0,0,0,0,0,0,],
  ];
  


//// G series, LUT-X12.

let LUTx12 = [ ['fs-px',100,200,300,400,500,600,700,800,900],
[10,'â','â','â','Â©Â§â¢','Â©Â§â¢','Â©Â§â¢','Â©Â§â¢','â','â'],
[11,'â','â','â','Â©Â§â¢','Â©Â§â¢','Â©Â§â¢','Â©Â§â¢','â','â'],
[12,'â','â','Â©Â§â¢','Ã90','Ã85','Ã80','Ã75','â','â'],
[14,'â','â','Â©Â§â¢',90,85,80,75,'â','â'],
[16,'â','Â©Â§â¢',95,80,75,70,65,'â','â'],
[18,'â','Â©Â§â¢',90,75,70,65,60,'Ã60','â'],
[21,'â',95,85,70,65,60,55,'Ã55','Ã55'],
[24,'â',90,75,60,55,50,45,'Ã45','Ã45'],
[28,'â',85,70,55,50,45,40,35,30],
[34,95,80,65,50,45,40,35,30,30],
[42,90,75,60,45,40,35,30,30,30],
[72,75,60,45,40,35,30,30,30,30],
[96,60,50,40,35,30,30,30,30,30], ];




///////\                                                        ////////////////
////////\                                                      /////////////////
/////////\  END CONFORMANCE SCORING CONSTANTS AND ARRAYS END  //////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/////////  DOM ACCESS VARIABLES  \//////////////////////////////////////////////
////////                          \/////////////////////////////////////////////


// Performance Improving Variables for DOM access

let inputBG = document.getElementById('inputBG'),
    BGpicker = document.getElementById('BGpicker'),
    BGpickerWrap = document.getElementById('BGpickerWrap'),
    BGvalidText = document.getElementById('BGvalidText');

let inputTXT = document.getElementById('inputTXT'),
    TXTpicker = document.getElementById('TXTpicker'),
    TXTpickerWrap = document.getElementById('TXTpickerWrap'),
    TXTvalidText = document.getElementById('TXTvalidText');

let tableSamples = document.getElementById('tableSamples');

let contrastResultTable = document.getElementById('contrastResultTable');
let buttonSpecial = document.getElementById('buttonSpecial');

let tableScoreDOMarray = [  'null',
              document.getElementById('tableScore1'),
              document.getElementById('tableScore2'),
              document.getElementById('tableScore3'),
              document.getElementById('tableScore4'),
              document.getElementById('tableScore5'), ];

let tsi = tableScoreDOMlen = tableScoreDOMarray.length;


let LsNormLabel = Math.round(normBG*100);
let LsRevLabel = Math.round(revBG*100);


////////////////////////////////////////////////////////////////////////////////
/////////  PAGE LOAD UTILITIES   \//////////////////////////////////////////////
////////                          \/////////////////////////////////////////////

    // For old samples section
function populateLabels() {   
// deprecated
}


 
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/////////  TEST CONTRAST FUNCTION  \////////////////////////////////////////////
////////                            \///////////////////////////////////////////
///////                              \//////////////////////////////////////////


function testContrast(midAdjust=false) {

  let contrast = 0.0;
  //let contrastString = '';

  if (BG.ok && TXT.ok) {

    // Get Contrast. It's kinda like "Get Shorty" but without Danny DiVito
        
    contrast = SAPCcontrast(TXT.LYP,BG.LYP);
    //contrastString = APCAcontrast(BG,TXT,2);
  
    let absContrast = isNaN(contrast) ? 0 : Math.abs(parseFloat(contrast));
    let contrastFixed = isNaN(contrast) ? contrast : contrast.toFixed(1);

    contrastResultTable.innerHTML = "L<sup>c</sup>  " + contrastFixed;

    let rowString = '';
    let currentLevel = 0;

    let tempAlertColor = '#F00';

    let modeScoreArrayLen = scoreArrayLen;
    let modeWeightArrayLen = weightArrayLen;

    globalBGcolor = BG.hex();
    globalTXTcolor = TXT.hex();
  
    if (mode === 'simple') {researchMode = false;}

    let sampleText = 'SampleText';
    let sampleBodyText = 'the lazy grey dog slept as the<br> frisky fox frolicked freely in the<br>field of grass without a care in<br>the world, wondering if the dog<br> would ever wake up so they could play';
    let minimumText = 'MINIMUM';
    let fontLevel28 = 28, fontLevel39 = 39, fontLevel79 = 79, fontLevel24 = 24;


    if (absContrast < minScoreG) {
    
    /////  FOR "ALL UNDER MINIMUM" MESSAGE  /////
    
        // alt for debug only
    //if (absContrast < 120) { 
    
	    if (mode === 'simple') {
		tableScoreDOMarray[4].innerHTML = '<th style="border-radius: 12px 36px 36px 12px;">'
				  + scoreTextArray[0] + '</th>'
				  + loConWarningRow9x1s();
	    } else if (mode === 'mobile') {
		tableScoreDOMarray[4].innerHTML = '<th>'
				  + scoreTextArray[0] + '</th>'
				  + loConWarningRow6x1;
	    }

    } else {  ///// Interpolate fonts and fill table  /////
  
      /////  Prep for interpolated fonts  /////

      let si = 4;
      let cl = 0;
    
      // this loop sets score index
        for (; cl < contrastArrayLenG; ) {
          if (absContrast > scoreLevelsPreCalcG[cl][si]) {
            scoreIndex = cl;
            break
          } else {
 // console.log('cl '+cl+'  si  ' + scoreIndex)
            cl++;
          }
        }

///////////////////////////////////////////////////////////////////////////
/////////  Font and Score Interpolation  \////////////////////////////////
////////                                  \//////////////////////////////

      // Interpolation
    let tempFont = 777;
    let s = si; 
    let w = 2;
    let tempScoreAdj = 1.0;
    let minFontTemp = 0.0;
    let nonTextBorder = '';

      // populate interpolatedFonts array with interpolated values

      tempScoreAdj = (absContrast -
                      scoreLevelsPreCalcG[scoreIndex][s]) /
                      scoreDeltaG[scoreIndex][s];

      for (; w < weightArrayLen; w++) {

      tempFont = fontMatrixG[scoreIndex][w]; 

        switch (tempFont) {
          case 410:
          case 411:
          case 412:
          case 413:
          case 414:
          case 415:
          case 416:
          case 418:
          case 445:
          case 427:
          case 417:
          case 413.5:
          
          case 777:
          case 888:
          case 999:
          case 0:
            
            interpolatedFonts[s][w] = tempFont;
            
            break;


          default:  // INTERPOLATION OF FONT SIZE
                   // sets level for 0.5 size increments of smaller fonts
                  // Note bitwise (n|0) instead of floor
            (tempFont > 24) ?
              interpolatedFonts[s][w] = 
                  Math.round(tempFont -
                  (fontDeltaG[scoreIndex][w] * //scoreIndex - 1 for correct â
                  tempScoreAdj)) :
              interpolatedFonts[s][w] = 
                  tempFont -
                  ((2.0 * fontDeltaG[scoreIndex][w] *
                  tempScoreAdj) | 0) * 0.5; // (n|0) is bw floor
        }
      }


////////\                         ///////////////////////////////////////////
/////////\  End Interpolation   ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
/////////  Populate Table and Samples   \/////////////////////////////////
////////                                 \///////////////////////////////

      s = 4;

    if (mode === 'simple') {
      w = 2;
      modeWeightArrayLen = 8;
      rowString = '<th style="border-radius: 12px 36px 36px 12px;" >'
                 + scoreTextArraySimple[s] + '</th>';
    } else if (mode === 'mobile') {
      w = 2;
      modeWeightArrayLen = 8;
      rowString = '<th '+ normalColspan +' >' + scoreTextArray[s] + '</th>';
    }

    for (; w < modeWeightArrayLen; w++) {

      tempFont = interpolatedFonts[s][w];

      switch (tempFont) {

          case 410:
          case 411:
          case 412:
          case 413:
          case 414:
          case 415:
          case 416:
          case 418:
          case 445:
          case 427:
          case 417:
          case 413.5:
               minFontTemp = tempFont % 400;
// console.log(minFontTemp + '  x  ' + tempFont);

         default:
            tempFont = (tempFont <= fontMatrixGmin[s][w]) ?
                        fontMatrixGmin[s][w] :
                        tempFont;

          if (mode === 'simple' && (w == 2 || w == 5 || w == 6)) {
            modeColspan = normalColspan;
            fontLevel79 = 82;
            fontLevel39 = 69;
            fontLevel28 = 39;
            sampleText = 'SampleText';
            minimumText = 'MIN';
          } else if (mode === 'simple') { 
            modeColspan = simpleColspan;
            fontLevel79 = 112;
            fontLevel39 = 96;
            fontLevel28 = 52;
            sampleText = 'Sample Text &amp; ATOMsizedgap';
            minimumText = 'MINIMUM SIZE'; //'NO CONTENT TEXT<br> At This Size';
          } else if (mode === 'mobile') { 
            modeColspan = mobileColspan;
          } else { modeColspan = normalColspan;
          }

    nonTextBorder = (contrast < 0) ? 'box-shadow: 0 0 3px #123;' : '';
    
      //  LowCon error
      (tempFont > 800 ) ?
            rowString += '<td '+ modeColspan + loConMessage2LowSingle :

    // Non Text
       ( (nonTextScoreG > absContrast || tempFont > 700) && (w == 2 || w == 5 || w == 6) ) ?
          rowString += '<td style="margin: -10px 0; padding: 0; max-height: 60px; font-size: 96px; font-weight: ' 
            + weightArray[w] + '; font-family: Barlow, Kanit, poppins; line-height:0.9; color:#'
            + TXT.hex() + '; background-color:#' 
            + BG.hex()
            + '; border-width:'+ (w * 2) +'px; border-radius: 24px; border-color:#'
            + TXT.hex() + '; ' + nonTextBorder + '">N</td>' :
    // Non Text
        (nonTextScoreG > absContrast || tempFont > 700) ?
          rowString += '<td '+ modeColspan +' style="margin: -10px 0; padding: 0;max-height: 60px; font-size: 100px; font-stretch: ultra-expanded; font-weight: ' 
            + weightArray[w] + '; font-family: Kanit, poppins; line-height:0.9; color:#'
            + TXT.hex() + '; background-color:#' 
            + BG.hex()
            + '; border-width:'+ (w * 2) +'px; border-radius: 36px; border-color:#'
            + TXT.hex() + '; ' + nonTextBorder + '">|N|</td>' :

// MINIMUM 
        (tempFont > 400 && w == 2) ?  
          rowString += '<td '+ modeColspan +' style="font-size:' 
            + minFontTemp  + 'px; font-weight:200; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + ';">' + minFontTemp
            + 'px <br>' + minimumText +'</td>' :
            
        (tempFont > 400 ) ?  
          rowString += '<td '+ modeColspan +' style="display:inline-block; padding: 8px 0 0;font-size:' 
            + minFontTemp  + 'px; font-weight:' 
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height:'
            + (1.0 + w * 0.0456).toString()  + ';">' + minFontTemp
            + 'px ' + minimumText + '<br>'
            + sampleBodyText +'</td>' :

   // score colored inset
        (tempFont > fontLevel79) ?
          rowString += '<td '+ modeColspan + ' style="font-size:'
            + tempFont + 'px; font-weight:'
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height: 0.75; overflow:hidden">&amp;'
            + '<div style="position:absolute; bottom: 24px; border-radius: 0 4px 4px 6px; margin: -32px auto 0; padding:2px 6px 2px 12px; font-size: 16px; font-weight: 600; color:#'
            + scoreColor[s] + '; background-color: #eee;">'
            + tempFont + 'px</div></td>' :

    // fs only
        (tempFont > fontLevel39) ?  
          rowString += '<td '+ modeColspan +' style="font-size:' 
            + tempFont + 'px; font-weight:' 
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height: 0.75;">' 
            + tempFont + '</td>' :

    // fspx only
        (tempFont > fontLevel28) ?  
          rowString += '<td '+ modeColspan +' style="font-size:' 
            + tempFont + 'px; font-weight:' 
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height: 0.75;">'
            + tempFont + 'px</td>' :

    // Sample Text 
        (tempFont > fontLevel24) ?
          rowString += '<td '+ modeColspan +' style="font-size:' 
            + tempFont + 'px; font-weight:' 
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height: 1.0;">'
            + tempFont + 'px<br>'+sampleText+'</td>' :
                
    // Sample Text Body Sample
          rowString += '<td '+ modeColspan +' style="display:inline-block;padding: 6px 0 0; font-size:' 
            + tempFont + 'px; font-weight:' 
            + weightArray[w] + '; color:#'
            + TXT.hex() + '; background-color:#'
            + BG.hex() + '; line-height:' + (1.0 + w * 0.0456).toString() + ';">'
            // + (2.2 - tempFont * 0.04) + ';">'
            + tempFont + 'px<br>'+sampleBodyText+'</td>';
      } // end switch
    } // end column for
    document.getElementById('tableScore' + s).innerHTML = rowString;

////////
    } 
  } else {   /// !(BG.ok && TXT.ok) ///

    contrast = 0;
    contrastResultTable.innerHTML = '<div class="fs06 cR">IO ERROR</div>';
    //contrastResult.innerHTML = '<div class="fs06 cR">INVALID<br>COLOR</div>';
    //contrastResult2.innerHTML = '<div class="fs06 cR">INVALID<br>COLOR</div>';

    tsi = tableScoreDOMlen - 1;
    tableScoreDOMarray[tsi].innerHTML = scoreTextProhibit
                      + badColorWarning9x5();
      tsi--;
    for (; tsi > 0; tsi--) {
      tableScoreDOMarray[tsi].innerHTML = scoreTextProhibit;
    }
  }
} // close testContrast()

////////\                                    ///////////////////////////////////
/////////\  END TEST CONTRAST FUNCTION END  ////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


</script>
</body>
</html>
